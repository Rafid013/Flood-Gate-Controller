
Flood_Gate_Controller.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000112c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000003c  00800060  0000112c  000011c0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  0080009c  0080009c  000011fc  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000011fc  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000c8  00000000  00000000  0000122c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000013b3  00000000  00000000  000012f4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000294  00000000  00000000  000026a7  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004b0  00000000  00000000  0000293b  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000204  00000000  00000000  00002dec  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000363  00000000  00000000  00002ff0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000762  00000000  00000000  00003353  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000b8  00000000  00000000  00003ab5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 a7 00 	jmp	0x14e	; 0x14e <__ctors_end>
       4:	0c 94 79 03 	jmp	0x6f2	; 0x6f2 <__vector_1>
       8:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
       c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      10:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      14:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      18:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      1c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      20:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      24:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      28:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      2c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      30:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      34:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      38:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      3c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      40:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      44:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      48:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      4c:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>
      50:	0c 94 c4 00 	jmp	0x188	; 0x188 <__bad_interrupt>

00000054 <__trampolines_end>:
      54:	00 40       	sbci	r16, 0x00	; 0
      56:	7a 10       	cpse	r7, r10
      58:	f3 5a       	subi	r31, 0xA3	; 163
      5a:	00 a0       	ldd	r0, Z+32	; 0x20
      5c:	72 4e       	sbci	r23, 0xE2	; 226
      5e:	18 09       	sbc	r17, r8
      60:	00 10       	cpse	r0, r0
      62:	a5 d4       	rcall	.+2378   	; 0x9ae <__divsf3_pse+0x58>
      64:	e8 00       	.word	0x00e8	; ????
      66:	00 e8       	ldi	r16, 0x80	; 128
      68:	76 48       	sbci	r23, 0x86	; 134
      6a:	17 00       	.word	0x0017	; ????
      6c:	00 e4       	ldi	r16, 0x40	; 64
      6e:	0b 54       	subi	r16, 0x4B	; 75
      70:	02 00       	.word	0x0002	; ????
      72:	00 ca       	rjmp	.-3072   	; 0xfffff474 <__eeprom_end+0xff7ef474>
      74:	9a 3b       	cpi	r25, 0xBA	; 186
      76:	00 00       	nop
      78:	00 e1       	ldi	r16, 0x10	; 16
      7a:	f5 05       	cpc	r31, r5
      7c:	00 00       	nop
      7e:	80 96       	adiw	r24, 0x20	; 32
      80:	98 00       	.word	0x0098	; ????
      82:	00 00       	nop
      84:	40 42       	sbci	r20, 0x20	; 32
      86:	0f 00       	.word	0x000f	; ????
      88:	00 00       	nop
      8a:	a0 86       	std	Z+8, r10	; 0x08
      8c:	01 00       	.word	0x0001	; ????
      8e:	00 00       	nop
      90:	10 27       	eor	r17, r16
      92:	00 00       	nop
      94:	00 00       	nop
      96:	e8 03       	fmulsu	r22, r16
      98:	00 00       	nop
      9a:	00 00       	nop
      9c:	64 00       	.word	0x0064	; ????
      9e:	00 00       	nop
      a0:	00 00       	nop
      a2:	0a 00       	.word	0x000a	; ????
      a4:	00 00       	nop
      a6:	00 00       	nop
      a8:	01 00       	.word	0x0001	; ????
      aa:	00 00       	nop
      ac:	00 00       	nop
      ae:	2c 76       	andi	r18, 0x6C	; 108
      b0:	d8 88       	ldd	r13, Y+16	; 0x10
      b2:	dc 67       	ori	r29, 0x7C	; 124
      b4:	4f 08       	sbc	r4, r15
      b6:	23 df       	rcall	.-442    	; 0xfffffefe <__eeprom_end+0xff7efefe>
      b8:	c1 df       	rcall	.-126    	; 0x3c <__zero_reg__+0x3b>
      ba:	ae 59       	subi	r26, 0x9E	; 158
      bc:	e1 b1       	in	r30, 0x01	; 1
      be:	b7 96       	adiw	r30, 0x27	; 39
      c0:	e5 e3       	ldi	r30, 0x35	; 53
      c2:	e4 53       	subi	r30, 0x34	; 52
      c4:	c6 3a       	cpi	r28, 0xA6	; 166
      c6:	e6 51       	subi	r30, 0x16	; 22
      c8:	99 76       	andi	r25, 0x69	; 105
      ca:	96 e8       	ldi	r25, 0x86	; 134
      cc:	e6 c2       	rjmp	.+1484   	; 0x69a <get_water_state+0x6a>
      ce:	84 26       	eor	r8, r20
      d0:	eb 89       	ldd	r30, Y+19	; 0x13
      d2:	8c 9b       	sbis	0x11, 4	; 17
      d4:	62 ed       	ldi	r22, 0xD2	; 210
      d6:	40 7c       	andi	r20, 0xC0	; 192
      d8:	6f fc       	.word	0xfc6f	; ????
      da:	ef bc       	out	0x2f, r14	; 47
      dc:	9c 9f       	mul	r25, r28
      de:	40 f2       	brcs	.-112    	; 0x70 <__trampolines_end+0x1c>
      e0:	ba a5       	ldd	r27, Y+42	; 0x2a
      e2:	6f a5       	ldd	r22, Y+47	; 0x2f
      e4:	f4 90       	lpm	r15, Z
      e6:	05 5a       	subi	r16, 0xA5	; 165
      e8:	2a f7       	brpl	.-54     	; 0xb4 <__trampolines_end+0x60>
      ea:	5c 93       	st	X, r21
      ec:	6b 6c       	ori	r22, 0xCB	; 203
      ee:	f9 67       	ori	r31, 0x79	; 121
      f0:	6d c1       	rjmp	.+730    	; 0x3cc <pinChange+0x240>
      f2:	1b fc       	.word	0xfc1b	; ????
      f4:	e0 e4       	ldi	r30, 0x40	; 64
      f6:	0d 47       	sbci	r16, 0x7D	; 125
      f8:	fe f5       	brtc	.+126    	; 0x178 <.do_clear_bss_loop>
      fa:	20 e6       	ldi	r18, 0x60	; 96
      fc:	b5 00       	.word	0x00b5	; ????
      fe:	d0 ed       	ldi	r29, 0xD0	; 208
     100:	90 2e       	mov	r9, r16
     102:	03 00       	.word	0x0003	; ????
     104:	94 35       	cpi	r25, 0x54	; 84
     106:	77 05       	cpc	r23, r7
     108:	00 80       	ld	r0, Z
     10a:	84 1e       	adc	r8, r20
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 20       	and	r0, r0
     110:	4e 0a       	sbc	r4, r30
     112:	00 00       	nop
     114:	00 c8       	rjmp	.-4096   	; 0xfffff116 <__eeprom_end+0xff7ef116>
     116:	0c 33       	cpi	r16, 0x3C	; 60
     118:	33 33       	cpi	r19, 0x33	; 51
     11a:	33 0f       	add	r19, r19
     11c:	98 6e       	ori	r25, 0xE8	; 232
     11e:	12 83       	std	Z+2, r17	; 0x02
     120:	11 41       	sbci	r17, 0x11	; 17
     122:	ef 8d       	ldd	r30, Y+31	; 0x1f
     124:	21 14       	cp	r2, r1
     126:	89 3b       	cpi	r24, 0xB9	; 185
     128:	e6 55       	subi	r30, 0x56	; 86
     12a:	16 cf       	rjmp	.-468    	; 0xffffff58 <__eeprom_end+0xff7eff58>
     12c:	fe e6       	ldi	r31, 0x6E	; 110
     12e:	db 18       	sub	r13, r11
     130:	d1 84       	ldd	r13, Z+9	; 0x09
     132:	4b 38       	cpi	r20, 0x8B	; 139
     134:	1b f7       	brvc	.-58     	; 0xfc <__trampolines_end+0xa8>
     136:	7c 1d       	adc	r23, r12
     138:	90 1d       	adc	r25, r0
     13a:	a4 bb       	out	0x14, r26	; 20
     13c:	e4 24       	eor	r14, r4
     13e:	20 32       	cpi	r18, 0x20	; 32
     140:	84 72       	andi	r24, 0x24	; 36
     142:	5e 22       	and	r5, r30
     144:	81 00       	.word	0x0081	; ????
     146:	c9 f1       	breq	.+114    	; 0x1ba <pinChange+0x2e>
     148:	24 ec       	ldi	r18, 0xC4	; 196
     14a:	a1 e5       	ldi	r26, 0x51	; 81
     14c:	3d 27       	eor	r19, r29

0000014e <__ctors_end>:
     14e:	11 24       	eor	r1, r1
     150:	1f be       	out	0x3f, r1	; 63
     152:	cf e5       	ldi	r28, 0x5F	; 95
     154:	d8 e0       	ldi	r29, 0x08	; 8
     156:	de bf       	out	0x3e, r29	; 62
     158:	cd bf       	out	0x3d, r28	; 61

0000015a <__do_copy_data>:
     15a:	10 e0       	ldi	r17, 0x00	; 0
     15c:	a0 e6       	ldi	r26, 0x60	; 96
     15e:	b0 e0       	ldi	r27, 0x00	; 0
     160:	ec e2       	ldi	r30, 0x2C	; 44
     162:	f1 e1       	ldi	r31, 0x11	; 17
     164:	02 c0       	rjmp	.+4      	; 0x16a <__do_copy_data+0x10>
     166:	05 90       	lpm	r0, Z+
     168:	0d 92       	st	X+, r0
     16a:	ac 39       	cpi	r26, 0x9C	; 156
     16c:	b1 07       	cpc	r27, r17
     16e:	d9 f7       	brne	.-10     	; 0x166 <__do_copy_data+0xc>

00000170 <__do_clear_bss>:
     170:	20 e0       	ldi	r18, 0x00	; 0
     172:	ac e9       	ldi	r26, 0x9C	; 156
     174:	b0 e0       	ldi	r27, 0x00	; 0
     176:	01 c0       	rjmp	.+2      	; 0x17a <.do_clear_bss_start>

00000178 <.do_clear_bss_loop>:
     178:	1d 92       	st	X+, r1

0000017a <.do_clear_bss_start>:
     17a:	a0 3a       	cpi	r26, 0xA0	; 160
     17c:	b2 07       	cpc	r27, r18
     17e:	e1 f7       	brne	.-8      	; 0x178 <.do_clear_bss_loop>
     180:	0e 94 a9 03 	call	0x752	; 0x752 <main>
     184:	0c 94 94 08 	jmp	0x1128	; 0x1128 <_exit>

00000188 <__bad_interrupt>:
     188:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000018c <pinChange>:

#include<util/delay.h>

void pinChange(int a, int b)
{
	if(b == 0)
     18c:	67 2b       	or	r22, r23
     18e:	09 f0       	breq	.+2      	; 0x192 <pinChange+0x6>
     190:	9f c0       	rjmp	.+318    	; 0x2d0 <pinChange+0x144>
	{
		if(a == eS_PORTA0)
     192:	00 97       	sbiw	r24, 0x00	; 0
     194:	11 f4       	brne	.+4      	; 0x19a <pinChange+0xe>
		PORTA &= ~(1<<PA0);
     196:	d8 98       	cbi	0x1b, 0	; 27
     198:	08 95       	ret
		else if(a == eS_PORTA1)
     19a:	81 30       	cpi	r24, 0x01	; 1
     19c:	91 05       	cpc	r25, r1
     19e:	11 f4       	brne	.+4      	; 0x1a4 <pinChange+0x18>
		PORTA &= ~(1<<PA1);
     1a0:	d9 98       	cbi	0x1b, 1	; 27
     1a2:	08 95       	ret
		else if(a == eS_PORTA2)
     1a4:	82 30       	cpi	r24, 0x02	; 2
     1a6:	91 05       	cpc	r25, r1
     1a8:	11 f4       	brne	.+4      	; 0x1ae <pinChange+0x22>
		PORTA &= ~(1<<PA2);
     1aa:	da 98       	cbi	0x1b, 2	; 27
     1ac:	08 95       	ret
		else if(a == eS_PORTA3)
     1ae:	83 30       	cpi	r24, 0x03	; 3
     1b0:	91 05       	cpc	r25, r1
     1b2:	11 f4       	brne	.+4      	; 0x1b8 <pinChange+0x2c>
		PORTA &= ~(1<<PA3);
     1b4:	db 98       	cbi	0x1b, 3	; 27
     1b6:	08 95       	ret
		else if(a == eS_PORTA4)
     1b8:	84 30       	cpi	r24, 0x04	; 4
     1ba:	91 05       	cpc	r25, r1
     1bc:	11 f4       	brne	.+4      	; 0x1c2 <pinChange+0x36>
		PORTA &= ~(1<<PA4);
     1be:	dc 98       	cbi	0x1b, 4	; 27
     1c0:	08 95       	ret
		else if(a == eS_PORTA5)
     1c2:	85 30       	cpi	r24, 0x05	; 5
     1c4:	91 05       	cpc	r25, r1
     1c6:	11 f4       	brne	.+4      	; 0x1cc <pinChange+0x40>
		PORTA &= ~(1<<PA5);
     1c8:	dd 98       	cbi	0x1b, 5	; 27
     1ca:	08 95       	ret
		else if(a == eS_PORTA6)
     1cc:	86 30       	cpi	r24, 0x06	; 6
     1ce:	91 05       	cpc	r25, r1
     1d0:	11 f4       	brne	.+4      	; 0x1d6 <pinChange+0x4a>
		PORTA &= ~(1<<PA6);
     1d2:	de 98       	cbi	0x1b, 6	; 27
     1d4:	08 95       	ret
		else if(a == eS_PORTA7)
     1d6:	87 30       	cpi	r24, 0x07	; 7
     1d8:	91 05       	cpc	r25, r1
     1da:	11 f4       	brne	.+4      	; 0x1e0 <pinChange+0x54>
		PORTA &= ~(1<<PA7);
     1dc:	df 98       	cbi	0x1b, 7	; 27
     1de:	08 95       	ret
		else if(a == eS_PORTB0)
     1e0:	8a 30       	cpi	r24, 0x0A	; 10
     1e2:	91 05       	cpc	r25, r1
     1e4:	11 f4       	brne	.+4      	; 0x1ea <pinChange+0x5e>
		PORTB &= ~(1<<PB0);
     1e6:	c0 98       	cbi	0x18, 0	; 24
     1e8:	08 95       	ret
		else if(a == eS_PORTB1)
     1ea:	8b 30       	cpi	r24, 0x0B	; 11
     1ec:	91 05       	cpc	r25, r1
     1ee:	11 f4       	brne	.+4      	; 0x1f4 <pinChange+0x68>
		PORTB &= ~(1<<PB1);
     1f0:	c1 98       	cbi	0x18, 1	; 24
     1f2:	08 95       	ret
		else if(a == eS_PORTB2)
     1f4:	8c 30       	cpi	r24, 0x0C	; 12
     1f6:	91 05       	cpc	r25, r1
     1f8:	11 f4       	brne	.+4      	; 0x1fe <pinChange+0x72>
		PORTB &= ~(1<<PB2);
     1fa:	c2 98       	cbi	0x18, 2	; 24
     1fc:	08 95       	ret
		else if(a == eS_PORTB3)
     1fe:	8d 30       	cpi	r24, 0x0D	; 13
     200:	91 05       	cpc	r25, r1
     202:	11 f4       	brne	.+4      	; 0x208 <pinChange+0x7c>
		PORTB &= ~(1<<PB3);
     204:	c3 98       	cbi	0x18, 3	; 24
     206:	08 95       	ret
		else if(a == eS_PORTB4)
     208:	8e 30       	cpi	r24, 0x0E	; 14
     20a:	91 05       	cpc	r25, r1
     20c:	11 f4       	brne	.+4      	; 0x212 <pinChange+0x86>
		PORTB &= ~(1<<PB4);
     20e:	c4 98       	cbi	0x18, 4	; 24
     210:	08 95       	ret
		else if(a == eS_PORTB5)
     212:	8f 30       	cpi	r24, 0x0F	; 15
     214:	91 05       	cpc	r25, r1
     216:	11 f4       	brne	.+4      	; 0x21c <pinChange+0x90>
		PORTB &= ~(1<<PB5);
     218:	c5 98       	cbi	0x18, 5	; 24
     21a:	08 95       	ret
		else if(a == eS_PORTB6)
     21c:	80 31       	cpi	r24, 0x10	; 16
     21e:	91 05       	cpc	r25, r1
     220:	11 f4       	brne	.+4      	; 0x226 <pinChange+0x9a>
		PORTB &= ~(1<<PB6);
     222:	c6 98       	cbi	0x18, 6	; 24
     224:	08 95       	ret
		else if(a == eS_PORTB7)
     226:	81 31       	cpi	r24, 0x11	; 17
     228:	91 05       	cpc	r25, r1
     22a:	11 f4       	brne	.+4      	; 0x230 <pinChange+0xa4>
		PORTB &= ~(1<<PB7);
     22c:	c7 98       	cbi	0x18, 7	; 24
     22e:	08 95       	ret
		else if(a == eS_PORTC0)
     230:	84 31       	cpi	r24, 0x14	; 20
     232:	91 05       	cpc	r25, r1
     234:	11 f4       	brne	.+4      	; 0x23a <pinChange+0xae>
		PORTC &= ~(1<<PC0);
     236:	a8 98       	cbi	0x15, 0	; 21
     238:	08 95       	ret
		else if(a == eS_PORTC1)
     23a:	85 31       	cpi	r24, 0x15	; 21
     23c:	91 05       	cpc	r25, r1
     23e:	11 f4       	brne	.+4      	; 0x244 <pinChange+0xb8>
		PORTC &= ~(1<<PC1);
     240:	a9 98       	cbi	0x15, 1	; 21
     242:	08 95       	ret
		else if(a == eS_PORTC2)
     244:	86 31       	cpi	r24, 0x16	; 22
     246:	91 05       	cpc	r25, r1
     248:	11 f4       	brne	.+4      	; 0x24e <pinChange+0xc2>
		PORTC &= ~(1<<PC2);
     24a:	aa 98       	cbi	0x15, 2	; 21
     24c:	08 95       	ret
		else if(a == eS_PORTC3)
     24e:	87 31       	cpi	r24, 0x17	; 23
     250:	91 05       	cpc	r25, r1
     252:	11 f4       	brne	.+4      	; 0x258 <pinChange+0xcc>
		PORTC &= ~(1<<PC3);
     254:	ab 98       	cbi	0x15, 3	; 21
     256:	08 95       	ret
		else if(a == eS_PORTC4)
     258:	88 31       	cpi	r24, 0x18	; 24
     25a:	91 05       	cpc	r25, r1
     25c:	11 f4       	brne	.+4      	; 0x262 <pinChange+0xd6>
		PORTC &= ~(1<<PC4);
     25e:	ac 98       	cbi	0x15, 4	; 21
     260:	08 95       	ret
		else if(a == eS_PORTC5)
     262:	89 31       	cpi	r24, 0x19	; 25
     264:	91 05       	cpc	r25, r1
     266:	11 f4       	brne	.+4      	; 0x26c <pinChange+0xe0>
		PORTC &= ~(1<<PC5);
     268:	ad 98       	cbi	0x15, 5	; 21
     26a:	08 95       	ret
		else if(a == eS_PORTC6)
     26c:	8a 31       	cpi	r24, 0x1A	; 26
     26e:	91 05       	cpc	r25, r1
     270:	11 f4       	brne	.+4      	; 0x276 <pinChange+0xea>
		PORTC &= ~(1<<PC6);
     272:	ae 98       	cbi	0x15, 6	; 21
     274:	08 95       	ret
		else if(a == eS_PORTC7)
     276:	8b 31       	cpi	r24, 0x1B	; 27
     278:	91 05       	cpc	r25, r1
     27a:	11 f4       	brne	.+4      	; 0x280 <pinChange+0xf4>
		PORTC &= ~(1<<PC7);
     27c:	af 98       	cbi	0x15, 7	; 21
     27e:	08 95       	ret
		else if(a == eS_PORTD0)
     280:	8e 31       	cpi	r24, 0x1E	; 30
     282:	91 05       	cpc	r25, r1
     284:	11 f4       	brne	.+4      	; 0x28a <pinChange+0xfe>
		PORTD &= ~(1<<PD0);
     286:	90 98       	cbi	0x12, 0	; 18
     288:	08 95       	ret
		else if(a == eS_PORTD1)
     28a:	8f 31       	cpi	r24, 0x1F	; 31
     28c:	91 05       	cpc	r25, r1
     28e:	11 f4       	brne	.+4      	; 0x294 <pinChange+0x108>
		PORTD &= ~(1<<PD1);
     290:	91 98       	cbi	0x12, 1	; 18
     292:	08 95       	ret
		else if(a == eS_PORTD2)
     294:	80 32       	cpi	r24, 0x20	; 32
     296:	91 05       	cpc	r25, r1
     298:	11 f4       	brne	.+4      	; 0x29e <pinChange+0x112>
		PORTD &= ~(1<<PD2);
     29a:	92 98       	cbi	0x12, 2	; 18
     29c:	08 95       	ret
		else if(a == eS_PORTD3)
     29e:	81 32       	cpi	r24, 0x21	; 33
     2a0:	91 05       	cpc	r25, r1
     2a2:	11 f4       	brne	.+4      	; 0x2a8 <pinChange+0x11c>
		PORTD &= ~(1<<PD3);
     2a4:	93 98       	cbi	0x12, 3	; 18
     2a6:	08 95       	ret
		else if(a == eS_PORTD4)
     2a8:	82 32       	cpi	r24, 0x22	; 34
     2aa:	91 05       	cpc	r25, r1
     2ac:	11 f4       	brne	.+4      	; 0x2b2 <pinChange+0x126>
		PORTD &= ~(1<<PD4);
     2ae:	94 98       	cbi	0x12, 4	; 18
     2b0:	08 95       	ret
		else if(a == eS_PORTD5)
     2b2:	83 32       	cpi	r24, 0x23	; 35
     2b4:	91 05       	cpc	r25, r1
     2b6:	11 f4       	brne	.+4      	; 0x2bc <pinChange+0x130>
		PORTD &= ~(1<<PD5);
     2b8:	95 98       	cbi	0x12, 5	; 18
     2ba:	08 95       	ret
		else if(a == eS_PORTD6)
     2bc:	84 32       	cpi	r24, 0x24	; 36
     2be:	91 05       	cpc	r25, r1
     2c0:	11 f4       	brne	.+4      	; 0x2c6 <pinChange+0x13a>
		PORTD &= ~(1<<PD6);
     2c2:	96 98       	cbi	0x12, 6	; 18
     2c4:	08 95       	ret
		else if(a == eS_PORTD7)
     2c6:	85 97       	sbiw	r24, 0x25	; 37
     2c8:	09 f0       	breq	.+2      	; 0x2cc <pinChange+0x140>
     2ca:	9f c0       	rjmp	.+318    	; 0x40a <pinChange+0x27e>
		PORTD &= ~(1<<PD7);
     2cc:	97 98       	cbi	0x12, 7	; 18
     2ce:	08 95       	ret
	}
	else
	{
		if(a == eS_PORTA0)
     2d0:	00 97       	sbiw	r24, 0x00	; 0
     2d2:	11 f4       	brne	.+4      	; 0x2d8 <pinChange+0x14c>
		PORTA |= (1<<PA0);
     2d4:	d8 9a       	sbi	0x1b, 0	; 27
     2d6:	08 95       	ret
		else if(a == eS_PORTA1)
     2d8:	81 30       	cpi	r24, 0x01	; 1
     2da:	91 05       	cpc	r25, r1
     2dc:	11 f4       	brne	.+4      	; 0x2e2 <pinChange+0x156>
		PORTA |= (1<<PA1);
     2de:	d9 9a       	sbi	0x1b, 1	; 27
     2e0:	08 95       	ret
		else if(a == eS_PORTA2)
     2e2:	82 30       	cpi	r24, 0x02	; 2
     2e4:	91 05       	cpc	r25, r1
     2e6:	11 f4       	brne	.+4      	; 0x2ec <pinChange+0x160>
		PORTA |= (1<<PA2);
     2e8:	da 9a       	sbi	0x1b, 2	; 27
     2ea:	08 95       	ret
		else if(a == eS_PORTA3)
     2ec:	83 30       	cpi	r24, 0x03	; 3
     2ee:	91 05       	cpc	r25, r1
     2f0:	11 f4       	brne	.+4      	; 0x2f6 <pinChange+0x16a>
		PORTA |= (1<<PA3);
     2f2:	db 9a       	sbi	0x1b, 3	; 27
     2f4:	08 95       	ret
		else if(a == eS_PORTA4)
     2f6:	84 30       	cpi	r24, 0x04	; 4
     2f8:	91 05       	cpc	r25, r1
     2fa:	11 f4       	brne	.+4      	; 0x300 <pinChange+0x174>
		PORTA |= (1<<PA4);
     2fc:	dc 9a       	sbi	0x1b, 4	; 27
     2fe:	08 95       	ret
		else if(a == eS_PORTA5)
     300:	85 30       	cpi	r24, 0x05	; 5
     302:	91 05       	cpc	r25, r1
     304:	11 f4       	brne	.+4      	; 0x30a <pinChange+0x17e>
		PORTA |= (1<<PA5);
     306:	dd 9a       	sbi	0x1b, 5	; 27
     308:	08 95       	ret
		else if(a == eS_PORTA6)
     30a:	86 30       	cpi	r24, 0x06	; 6
     30c:	91 05       	cpc	r25, r1
     30e:	11 f4       	brne	.+4      	; 0x314 <pinChange+0x188>
		PORTA |= (1<<PA6);
     310:	de 9a       	sbi	0x1b, 6	; 27
     312:	08 95       	ret
		else if(a == eS_PORTA7)
     314:	87 30       	cpi	r24, 0x07	; 7
     316:	91 05       	cpc	r25, r1
     318:	11 f4       	brne	.+4      	; 0x31e <pinChange+0x192>
		PORTA |= (1<<PA7);
     31a:	df 9a       	sbi	0x1b, 7	; 27
     31c:	08 95       	ret
		else if(a == eS_PORTB0)
     31e:	8a 30       	cpi	r24, 0x0A	; 10
     320:	91 05       	cpc	r25, r1
     322:	11 f4       	brne	.+4      	; 0x328 <pinChange+0x19c>
		PORTB |= (1<<PB0);
     324:	c0 9a       	sbi	0x18, 0	; 24
     326:	08 95       	ret
		else if(a == eS_PORTB1)
     328:	8b 30       	cpi	r24, 0x0B	; 11
     32a:	91 05       	cpc	r25, r1
     32c:	11 f4       	brne	.+4      	; 0x332 <pinChange+0x1a6>
		PORTB |= (1<<PB1);
     32e:	c1 9a       	sbi	0x18, 1	; 24
     330:	08 95       	ret
		else if(a == eS_PORTB2)
     332:	8c 30       	cpi	r24, 0x0C	; 12
     334:	91 05       	cpc	r25, r1
     336:	11 f4       	brne	.+4      	; 0x33c <pinChange+0x1b0>
		PORTB |= (1<<PB2);
     338:	c2 9a       	sbi	0x18, 2	; 24
     33a:	08 95       	ret
		else if(a == eS_PORTB3)
     33c:	8d 30       	cpi	r24, 0x0D	; 13
     33e:	91 05       	cpc	r25, r1
     340:	11 f4       	brne	.+4      	; 0x346 <pinChange+0x1ba>
		PORTB |= (1<<PB3);
     342:	c3 9a       	sbi	0x18, 3	; 24
     344:	08 95       	ret
		else if(a == eS_PORTB4)
     346:	8e 30       	cpi	r24, 0x0E	; 14
     348:	91 05       	cpc	r25, r1
     34a:	11 f4       	brne	.+4      	; 0x350 <pinChange+0x1c4>
		PORTB |= (1<<PB4);
     34c:	c4 9a       	sbi	0x18, 4	; 24
     34e:	08 95       	ret
		else if(a == eS_PORTB5)
     350:	8f 30       	cpi	r24, 0x0F	; 15
     352:	91 05       	cpc	r25, r1
     354:	11 f4       	brne	.+4      	; 0x35a <pinChange+0x1ce>
		PORTB |= (1<<PB5);
     356:	c5 9a       	sbi	0x18, 5	; 24
     358:	08 95       	ret
		else if(a == eS_PORTB6)
     35a:	80 31       	cpi	r24, 0x10	; 16
     35c:	91 05       	cpc	r25, r1
     35e:	11 f4       	brne	.+4      	; 0x364 <pinChange+0x1d8>
		PORTB |= (1<<PB6);
     360:	c6 9a       	sbi	0x18, 6	; 24
     362:	08 95       	ret
		else if(a == eS_PORTB7)
     364:	81 31       	cpi	r24, 0x11	; 17
     366:	91 05       	cpc	r25, r1
     368:	11 f4       	brne	.+4      	; 0x36e <pinChange+0x1e2>
		PORTB |= (1<<PB7);
     36a:	c7 9a       	sbi	0x18, 7	; 24
     36c:	08 95       	ret
		else if(a == eS_PORTC0)
     36e:	84 31       	cpi	r24, 0x14	; 20
     370:	91 05       	cpc	r25, r1
     372:	11 f4       	brne	.+4      	; 0x378 <pinChange+0x1ec>
		PORTC |= (1<<PC0);
     374:	a8 9a       	sbi	0x15, 0	; 21
     376:	08 95       	ret
		else if(a == eS_PORTC1)
     378:	85 31       	cpi	r24, 0x15	; 21
     37a:	91 05       	cpc	r25, r1
     37c:	11 f4       	brne	.+4      	; 0x382 <pinChange+0x1f6>
		PORTC |= (1<<PC1);
     37e:	a9 9a       	sbi	0x15, 1	; 21
     380:	08 95       	ret
		else if(a == eS_PORTC2)
     382:	86 31       	cpi	r24, 0x16	; 22
     384:	91 05       	cpc	r25, r1
     386:	11 f4       	brne	.+4      	; 0x38c <pinChange+0x200>
		PORTC |= (1<<PC2);
     388:	aa 9a       	sbi	0x15, 2	; 21
     38a:	08 95       	ret
		else if(a == eS_PORTC3)
     38c:	87 31       	cpi	r24, 0x17	; 23
     38e:	91 05       	cpc	r25, r1
     390:	11 f4       	brne	.+4      	; 0x396 <pinChange+0x20a>
		PORTC |= (1<<PC3);
     392:	ab 9a       	sbi	0x15, 3	; 21
     394:	08 95       	ret
		else if(a == eS_PORTC4)
     396:	88 31       	cpi	r24, 0x18	; 24
     398:	91 05       	cpc	r25, r1
     39a:	11 f4       	brne	.+4      	; 0x3a0 <pinChange+0x214>
		PORTC |= (1<<PC4);
     39c:	ac 9a       	sbi	0x15, 4	; 21
     39e:	08 95       	ret
		else if(a == eS_PORTC5)
     3a0:	89 31       	cpi	r24, 0x19	; 25
     3a2:	91 05       	cpc	r25, r1
     3a4:	11 f4       	brne	.+4      	; 0x3aa <pinChange+0x21e>
		PORTC |= (1<<PC5);
     3a6:	ad 9a       	sbi	0x15, 5	; 21
     3a8:	08 95       	ret
		else if(a == eS_PORTC6)
     3aa:	8a 31       	cpi	r24, 0x1A	; 26
     3ac:	91 05       	cpc	r25, r1
     3ae:	11 f4       	brne	.+4      	; 0x3b4 <pinChange+0x228>
		PORTC |= (1<<PC6);
     3b0:	ae 9a       	sbi	0x15, 6	; 21
     3b2:	08 95       	ret
		else if(a == eS_PORTC7)
     3b4:	8b 31       	cpi	r24, 0x1B	; 27
     3b6:	91 05       	cpc	r25, r1
     3b8:	11 f4       	brne	.+4      	; 0x3be <pinChange+0x232>
		PORTC |= (1<<PC7);
     3ba:	af 9a       	sbi	0x15, 7	; 21
     3bc:	08 95       	ret
		else if(a == eS_PORTD0)
     3be:	8e 31       	cpi	r24, 0x1E	; 30
     3c0:	91 05       	cpc	r25, r1
     3c2:	11 f4       	brne	.+4      	; 0x3c8 <pinChange+0x23c>
		PORTD |= (1<<PD0);
     3c4:	90 9a       	sbi	0x12, 0	; 18
     3c6:	08 95       	ret
		else if(a == eS_PORTD1)
     3c8:	8f 31       	cpi	r24, 0x1F	; 31
     3ca:	91 05       	cpc	r25, r1
     3cc:	11 f4       	brne	.+4      	; 0x3d2 <pinChange+0x246>
		PORTD |= (1<<PD1);
     3ce:	91 9a       	sbi	0x12, 1	; 18
     3d0:	08 95       	ret
		else if(a == eS_PORTD2)
     3d2:	80 32       	cpi	r24, 0x20	; 32
     3d4:	91 05       	cpc	r25, r1
     3d6:	11 f4       	brne	.+4      	; 0x3dc <pinChange+0x250>
		PORTD |= (1<<PD2);
     3d8:	92 9a       	sbi	0x12, 2	; 18
     3da:	08 95       	ret
		else if(a == eS_PORTD3)
     3dc:	81 32       	cpi	r24, 0x21	; 33
     3de:	91 05       	cpc	r25, r1
     3e0:	11 f4       	brne	.+4      	; 0x3e6 <pinChange+0x25a>
		PORTD |= (1<<PD3);
     3e2:	93 9a       	sbi	0x12, 3	; 18
     3e4:	08 95       	ret
		else if(a == eS_PORTD4)
     3e6:	82 32       	cpi	r24, 0x22	; 34
     3e8:	91 05       	cpc	r25, r1
     3ea:	11 f4       	brne	.+4      	; 0x3f0 <pinChange+0x264>
		PORTD |= (1<<PD4);
     3ec:	94 9a       	sbi	0x12, 4	; 18
     3ee:	08 95       	ret
		else if(a == eS_PORTD5)
     3f0:	83 32       	cpi	r24, 0x23	; 35
     3f2:	91 05       	cpc	r25, r1
     3f4:	11 f4       	brne	.+4      	; 0x3fa <pinChange+0x26e>
		PORTD |= (1<<PD5);
     3f6:	95 9a       	sbi	0x12, 5	; 18
     3f8:	08 95       	ret
		else if(a == eS_PORTD6)
     3fa:	84 32       	cpi	r24, 0x24	; 36
     3fc:	91 05       	cpc	r25, r1
     3fe:	11 f4       	brne	.+4      	; 0x404 <pinChange+0x278>
		PORTD |= (1<<PD6);
     400:	96 9a       	sbi	0x12, 6	; 18
     402:	08 95       	ret
		else if(a == eS_PORTD7)
     404:	85 97       	sbiw	r24, 0x25	; 37
     406:	09 f4       	brne	.+2      	; 0x40a <pinChange+0x27e>
		PORTD |= (1<<PD7);
     408:	97 9a       	sbi	0x12, 7	; 18
     40a:	08 95       	ret

0000040c <Lcd4_Port>:
//End LCD 8 Bit Interfacing Functions

//LCD 4 Bit Interfacing Functions

void Lcd4_Port(char a)
{
     40c:	cf 93       	push	r28
     40e:	c8 2f       	mov	r28, r24
	if(a & 1)
     410:	80 ff       	sbrs	r24, 0
     412:	07 c0       	rjmp	.+14     	; 0x422 <Lcd4_Port+0x16>
	pinChange(D4,1);
     414:	61 e0       	ldi	r22, 0x01	; 1
     416:	70 e0       	ldi	r23, 0x00	; 0
     418:	82 e2       	ldi	r24, 0x22	; 34
     41a:	90 e0       	ldi	r25, 0x00	; 0
     41c:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     420:	06 c0       	rjmp	.+12     	; 0x42e <Lcd4_Port+0x22>
	else
	pinChange(D4,0);
     422:	60 e0       	ldi	r22, 0x00	; 0
     424:	70 e0       	ldi	r23, 0x00	; 0
     426:	82 e2       	ldi	r24, 0x22	; 34
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
	
	if(a & 2)
     42e:	c1 ff       	sbrs	r28, 1
     430:	07 c0       	rjmp	.+14     	; 0x440 <Lcd4_Port+0x34>
	pinChange(D5,1);
     432:	61 e0       	ldi	r22, 0x01	; 1
     434:	70 e0       	ldi	r23, 0x00	; 0
     436:	83 e2       	ldi	r24, 0x23	; 35
     438:	90 e0       	ldi	r25, 0x00	; 0
     43a:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     43e:	06 c0       	rjmp	.+12     	; 0x44c <Lcd4_Port+0x40>
	else
	pinChange(D5,0);
     440:	60 e0       	ldi	r22, 0x00	; 0
     442:	70 e0       	ldi	r23, 0x00	; 0
     444:	83 e2       	ldi	r24, 0x23	; 35
     446:	90 e0       	ldi	r25, 0x00	; 0
     448:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
	
	if(a & 4)
     44c:	c2 ff       	sbrs	r28, 2
     44e:	07 c0       	rjmp	.+14     	; 0x45e <Lcd4_Port+0x52>
	pinChange(D6,1);
     450:	61 e0       	ldi	r22, 0x01	; 1
     452:	70 e0       	ldi	r23, 0x00	; 0
     454:	84 e2       	ldi	r24, 0x24	; 36
     456:	90 e0       	ldi	r25, 0x00	; 0
     458:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     45c:	06 c0       	rjmp	.+12     	; 0x46a <Lcd4_Port+0x5e>
	else
	pinChange(D6,0);
     45e:	60 e0       	ldi	r22, 0x00	; 0
     460:	70 e0       	ldi	r23, 0x00	; 0
     462:	84 e2       	ldi	r24, 0x24	; 36
     464:	90 e0       	ldi	r25, 0x00	; 0
     466:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
	
	if(a & 8)
     46a:	c3 ff       	sbrs	r28, 3
     46c:	07 c0       	rjmp	.+14     	; 0x47c <Lcd4_Port+0x70>
	pinChange(D7,1);
     46e:	61 e0       	ldi	r22, 0x01	; 1
     470:	70 e0       	ldi	r23, 0x00	; 0
     472:	85 e2       	ldi	r24, 0x25	; 37
     474:	90 e0       	ldi	r25, 0x00	; 0
     476:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     47a:	06 c0       	rjmp	.+12     	; 0x488 <Lcd4_Port+0x7c>
	else
	pinChange(D7,0);
     47c:	60 e0       	ldi	r22, 0x00	; 0
     47e:	70 e0       	ldi	r23, 0x00	; 0
     480:	85 e2       	ldi	r24, 0x25	; 37
     482:	90 e0       	ldi	r25, 0x00	; 0
     484:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
}
     488:	cf 91       	pop	r28
     48a:	08 95       	ret

0000048c <Lcd4_Cmd>:
void Lcd4_Cmd(char a)
{
     48c:	cf 93       	push	r28
     48e:	c8 2f       	mov	r28, r24
	pinChange(RS,0);             // => RS = 0
     490:	60 e0       	ldi	r22, 0x00	; 0
     492:	70 e0       	ldi	r23, 0x00	; 0
     494:	8a e1       	ldi	r24, 0x1A	; 26
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
	Lcd4_Port(a);
     49c:	8c 2f       	mov	r24, r28
     49e:	0e 94 06 02 	call	0x40c	; 0x40c <Lcd4_Port>
	pinChange(EN,1);            // => E = 1
     4a2:	61 e0       	ldi	r22, 0x01	; 1
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	8b e1       	ldi	r24, 0x1B	; 27
     4a8:	90 e0       	ldi	r25, 0x00	; 0
     4aa:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     4ae:	8f e9       	ldi	r24, 0x9F	; 159
     4b0:	9f e0       	ldi	r25, 0x0F	; 15
     4b2:	01 97       	sbiw	r24, 0x01	; 1
     4b4:	f1 f7       	brne	.-4      	; 0x4b2 <Lcd4_Cmd+0x26>
     4b6:	00 c0       	rjmp	.+0      	; 0x4b8 <Lcd4_Cmd+0x2c>
     4b8:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);             // => E = 0
     4ba:	60 e0       	ldi	r22, 0x00	; 0
     4bc:	70 e0       	ldi	r23, 0x00	; 0
     4be:	8b e1       	ldi	r24, 0x1B	; 27
     4c0:	90 e0       	ldi	r25, 0x00	; 0
     4c2:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     4c6:	8f e9       	ldi	r24, 0x9F	; 159
     4c8:	9f e0       	ldi	r25, 0x0F	; 15
     4ca:	01 97       	sbiw	r24, 0x01	; 1
     4cc:	f1 f7       	brne	.-4      	; 0x4ca <Lcd4_Cmd+0x3e>
     4ce:	00 c0       	rjmp	.+0      	; 0x4d0 <Lcd4_Cmd+0x44>
     4d0:	00 00       	nop
	_delay_ms(1);
}
     4d2:	cf 91       	pop	r28
     4d4:	08 95       	ret

000004d6 <Lcd4_Clear>:

void Lcd4_Clear()
{
	Lcd4_Cmd(0);
     4d6:	80 e0       	ldi	r24, 0x00	; 0
     4d8:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
	Lcd4_Cmd(1);
     4dc:	81 e0       	ldi	r24, 0x01	; 1
     4de:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     4e2:	08 95       	ret

000004e4 <Lcd4_Set_Cursor>:
}

void Lcd4_Set_Cursor(char a, char b)
{
     4e4:	cf 93       	push	r28
     4e6:	c6 2f       	mov	r28, r22
	char temp,z,y;
	if(a == 1)
     4e8:	81 30       	cpi	r24, 0x01	; 1
     4ea:	59 f4       	brne	.+22     	; 0x502 <Lcd4_Set_Cursor+0x1e>
	{
		temp = 0x80 + b;
     4ec:	80 e8       	ldi	r24, 0x80	; 128
     4ee:	86 0f       	add	r24, r22
		z = temp>>4;
		y = (0x80+b) & 0x0F;
		Lcd4_Cmd(z);
     4f0:	82 95       	swap	r24
     4f2:	8f 70       	andi	r24, 0x0F	; 15
     4f4:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
		Lcd4_Cmd(y);
     4f8:	8c 2f       	mov	r24, r28
     4fa:	8f 70       	andi	r24, 0x0F	; 15
     4fc:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     500:	0c c0       	rjmp	.+24     	; 0x51a <Lcd4_Set_Cursor+0x36>
	}
	else if(a == 2)
     502:	82 30       	cpi	r24, 0x02	; 2
     504:	51 f4       	brne	.+20     	; 0x51a <Lcd4_Set_Cursor+0x36>
	{
		temp = 0xC0 + b;
     506:	80 ec       	ldi	r24, 0xC0	; 192
     508:	86 0f       	add	r24, r22
		z = temp>>4;
		y = (0xC0+b) & 0x0F;
		Lcd4_Cmd(z);
     50a:	82 95       	swap	r24
     50c:	8f 70       	andi	r24, 0x0F	; 15
     50e:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
		Lcd4_Cmd(y);
     512:	8c 2f       	mov	r24, r28
     514:	8f 70       	andi	r24, 0x0F	; 15
     516:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
	}
}
     51a:	cf 91       	pop	r28
     51c:	08 95       	ret

0000051e <Lcd4_Init>:

void Lcd4_Init()
{
	Lcd4_Port(0x00);
     51e:	80 e0       	ldi	r24, 0x00	; 0
     520:	0e 94 06 02 	call	0x40c	; 0x40c <Lcd4_Port>
     524:	2f ef       	ldi	r18, 0xFF	; 255
     526:	89 ef       	ldi	r24, 0xF9	; 249
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	21 50       	subi	r18, 0x01	; 1
     52c:	80 40       	sbci	r24, 0x00	; 0
     52e:	90 40       	sbci	r25, 0x00	; 0
     530:	e1 f7       	brne	.-8      	; 0x52a <Lcd4_Init+0xc>
     532:	00 c0       	rjmp	.+0      	; 0x534 <Lcd4_Init+0x16>
     534:	00 00       	nop
	_delay_ms(20);
	///////////// Reset process from datasheet /////////
	Lcd4_Cmd(0x03);
     536:	83 e0       	ldi	r24, 0x03	; 3
     538:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     53c:	8f e1       	ldi	r24, 0x1F	; 31
     53e:	9e e4       	ldi	r25, 0x4E	; 78
     540:	01 97       	sbiw	r24, 0x01	; 1
     542:	f1 f7       	brne	.-4      	; 0x540 <Lcd4_Init+0x22>
     544:	00 c0       	rjmp	.+0      	; 0x546 <Lcd4_Init+0x28>
     546:	00 00       	nop
	_delay_ms(5);
	Lcd4_Cmd(0x03);
     548:	83 e0       	ldi	r24, 0x03	; 3
     54a:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     54e:	8f ed       	ldi	r24, 0xDF	; 223
     550:	9b ea       	ldi	r25, 0xAB	; 171
     552:	01 97       	sbiw	r24, 0x01	; 1
     554:	f1 f7       	brne	.-4      	; 0x552 <Lcd4_Init+0x34>
     556:	00 c0       	rjmp	.+0      	; 0x558 <Lcd4_Init+0x3a>
     558:	00 00       	nop
	_delay_ms(11);
	Lcd4_Cmd(0x03);
     55a:	83 e0       	ldi	r24, 0x03	; 3
     55c:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
	/////////////////////////////////////////////////////
	Lcd4_Cmd(0x02);
     560:	82 e0       	ldi	r24, 0x02	; 2
     562:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
	Lcd4_Cmd(0x02);
     566:	82 e0       	ldi	r24, 0x02	; 2
     568:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
	Lcd4_Cmd(0x08);
     56c:	88 e0       	ldi	r24, 0x08	; 8
     56e:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
	Lcd4_Cmd(0x00);
     572:	80 e0       	ldi	r24, 0x00	; 0
     574:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
	Lcd4_Cmd(0x0C);
     578:	8c e0       	ldi	r24, 0x0C	; 12
     57a:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
	Lcd4_Cmd(0x00);
     57e:	80 e0       	ldi	r24, 0x00	; 0
     580:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
	Lcd4_Cmd(0x06);
     584:	86 e0       	ldi	r24, 0x06	; 6
     586:	0e 94 46 02 	call	0x48c	; 0x48c <Lcd4_Cmd>
     58a:	08 95       	ret

0000058c <Lcd4_Write_Char>:
}

void Lcd4_Write_Char(char a)
{
     58c:	cf 93       	push	r28
     58e:	c8 2f       	mov	r28, r24
	char temp,y;
	temp = a&0x0F;
	y = a&0xF0;
	pinChange(RS,1);             // => RS = 1
     590:	61 e0       	ldi	r22, 0x01	; 1
     592:	70 e0       	ldi	r23, 0x00	; 0
     594:	8a e1       	ldi	r24, 0x1A	; 26
     596:	90 e0       	ldi	r25, 0x00	; 0
     598:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
	Lcd4_Port(y>>4);             //Data transfer
     59c:	8c 2f       	mov	r24, r28
     59e:	82 95       	swap	r24
     5a0:	8f 70       	andi	r24, 0x0F	; 15
     5a2:	0e 94 06 02 	call	0x40c	; 0x40c <Lcd4_Port>
	pinChange(EN,1);
     5a6:	61 e0       	ldi	r22, 0x01	; 1
     5a8:	70 e0       	ldi	r23, 0x00	; 0
     5aa:	8b e1       	ldi	r24, 0x1B	; 27
     5ac:	90 e0       	ldi	r25, 0x00	; 0
     5ae:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5b2:	8f e9       	ldi	r24, 0x9F	; 159
     5b4:	9f e0       	ldi	r25, 0x0F	; 15
     5b6:	01 97       	sbiw	r24, 0x01	; 1
     5b8:	f1 f7       	brne	.-4      	; 0x5b6 <Lcd4_Write_Char+0x2a>
     5ba:	00 c0       	rjmp	.+0      	; 0x5bc <Lcd4_Write_Char+0x30>
     5bc:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);
     5be:	60 e0       	ldi	r22, 0x00	; 0
     5c0:	70 e0       	ldi	r23, 0x00	; 0
     5c2:	8b e1       	ldi	r24, 0x1B	; 27
     5c4:	90 e0       	ldi	r25, 0x00	; 0
     5c6:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5ca:	8f e9       	ldi	r24, 0x9F	; 159
     5cc:	9f e0       	ldi	r25, 0x0F	; 15
     5ce:	01 97       	sbiw	r24, 0x01	; 1
     5d0:	f1 f7       	brne	.-4      	; 0x5ce <Lcd4_Write_Char+0x42>
     5d2:	00 c0       	rjmp	.+0      	; 0x5d4 <Lcd4_Write_Char+0x48>
     5d4:	00 00       	nop
	_delay_ms(1);
	Lcd4_Port(temp);
     5d6:	8c 2f       	mov	r24, r28
     5d8:	8f 70       	andi	r24, 0x0F	; 15
     5da:	0e 94 06 02 	call	0x40c	; 0x40c <Lcd4_Port>
	pinChange(EN,1);
     5de:	61 e0       	ldi	r22, 0x01	; 1
     5e0:	70 e0       	ldi	r23, 0x00	; 0
     5e2:	8b e1       	ldi	r24, 0x1B	; 27
     5e4:	90 e0       	ldi	r25, 0x00	; 0
     5e6:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     5ea:	8f e9       	ldi	r24, 0x9F	; 159
     5ec:	9f e0       	ldi	r25, 0x0F	; 15
     5ee:	01 97       	sbiw	r24, 0x01	; 1
     5f0:	f1 f7       	brne	.-4      	; 0x5ee <Lcd4_Write_Char+0x62>
     5f2:	00 c0       	rjmp	.+0      	; 0x5f4 <Lcd4_Write_Char+0x68>
     5f4:	00 00       	nop
	_delay_ms(1);
	pinChange(EN,0);
     5f6:	60 e0       	ldi	r22, 0x00	; 0
     5f8:	70 e0       	ldi	r23, 0x00	; 0
     5fa:	8b e1       	ldi	r24, 0x1B	; 27
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	0e 94 c6 00 	call	0x18c	; 0x18c <pinChange>
     602:	8f e9       	ldi	r24, 0x9F	; 159
     604:	9f e0       	ldi	r25, 0x0F	; 15
     606:	01 97       	sbiw	r24, 0x01	; 1
     608:	f1 f7       	brne	.-4      	; 0x606 <Lcd4_Write_Char+0x7a>
     60a:	00 c0       	rjmp	.+0      	; 0x60c <Lcd4_Write_Char+0x80>
     60c:	00 00       	nop
	_delay_ms(1);
}
     60e:	cf 91       	pop	r28
     610:	08 95       	ret

00000612 <Lcd4_Write_String>:

void Lcd4_Write_String(char *a)
{
     612:	cf 93       	push	r28
     614:	df 93       	push	r29
     616:	ec 01       	movw	r28, r24
	int i;
	for(i=0;a[i]!='\0';i++)
     618:	88 81       	ld	r24, Y
     61a:	88 23       	and	r24, r24
     61c:	31 f0       	breq	.+12     	; 0x62a <Lcd4_Write_String+0x18>
     61e:	21 96       	adiw	r28, 0x01	; 1
	Lcd4_Write_Char(a[i]);
     620:	0e 94 c6 02 	call	0x58c	; 0x58c <Lcd4_Write_Char>
}

void Lcd4_Write_String(char *a)
{
	int i;
	for(i=0;a[i]!='\0';i++)
     624:	89 91       	ld	r24, Y+
     626:	81 11       	cpse	r24, r1
     628:	fb cf       	rjmp	.-10     	; 0x620 <Lcd4_Write_String+0xe>
	Lcd4_Write_Char(a[i]);
}
     62a:	df 91       	pop	r29
     62c:	cf 91       	pop	r28
     62e:	08 95       	ret

00000630 <get_water_state>:
/********
 * The higher the distance from sonar to water, lower the water level.
 * So when distance is highest get_water_state(int) returns LOW,
 * when distance is lowest it returns HIGH
 ********/
water_state get_water_state(double height) {
     630:	cf 92       	push	r12
     632:	df 92       	push	r13
     634:	ef 92       	push	r14
     636:	ff 92       	push	r15
     638:	cf 93       	push	r28
	height -= WATER_TO_SONAR;
     63a:	20 e0       	ldi	r18, 0x00	; 0
     63c:	30 e0       	ldi	r19, 0x00	; 0
     63e:	40 e8       	ldi	r20, 0x80	; 128
     640:	50 e4       	ldi	r21, 0x40	; 64
     642:	0e 94 33 04 	call	0x866	; 0x866 <__subsf3>
     646:	6b 01       	movw	r12, r22
     648:	7c 01       	movw	r14, r24
	if(height < 0) height = 0; 
     64a:	20 e0       	ldi	r18, 0x00	; 0
     64c:	30 e0       	ldi	r19, 0x00	; 0
     64e:	a9 01       	movw	r20, r18
     650:	0e 94 98 04 	call	0x930	; 0x930 <__cmpsf2>
     654:	88 23       	and	r24, r24
     656:	0c f4       	brge	.+2      	; 0x65a <get_water_state+0x2a>
     658:	3e c0       	rjmp	.+124    	; 0x6d6 <get_water_state+0xa6>
	if(height <= WATER_MAX_HEIGHT/4.0 && height >= 0) return CRITICAL;
     65a:	20 e0       	ldi	r18, 0x00	; 0
     65c:	30 e0       	ldi	r19, 0x00	; 0
     65e:	40 e7       	ldi	r20, 0x70	; 112
     660:	50 e4       	ldi	r21, 0x40	; 64
     662:	c7 01       	movw	r24, r14
     664:	b6 01       	movw	r22, r12
     666:	0e 94 98 04 	call	0x930	; 0x930 <__cmpsf2>
     66a:	18 16       	cp	r1, r24
     66c:	4c f0       	brlt	.+18     	; 0x680 <get_water_state+0x50>
     66e:	20 e0       	ldi	r18, 0x00	; 0
     670:	30 e0       	ldi	r19, 0x00	; 0
     672:	a9 01       	movw	r20, r18
     674:	c7 01       	movw	r24, r14
     676:	b6 01       	movw	r22, r12
     678:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__gesf2>
     67c:	88 23       	and	r24, r24
     67e:	6c f5       	brge	.+90     	; 0x6da <get_water_state+0xaa>
	else if(height > WATER_MAX_HEIGHT/4.0 && height <= WATER_MAX_HEIGHT/2.0) return HIGH;
     680:	20 e0       	ldi	r18, 0x00	; 0
     682:	30 e0       	ldi	r19, 0x00	; 0
     684:	40 e7       	ldi	r20, 0x70	; 112
     686:	50 e4       	ldi	r21, 0x40	; 64
     688:	c7 01       	movw	r24, r14
     68a:	b6 01       	movw	r22, r12
     68c:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__gesf2>
     690:	18 16       	cp	r1, r24
     692:	54 f4       	brge	.+20     	; 0x6a8 <get_water_state+0x78>
     694:	20 e0       	ldi	r18, 0x00	; 0
     696:	30 e0       	ldi	r19, 0x00	; 0
     698:	40 ef       	ldi	r20, 0xF0	; 240
     69a:	50 e4       	ldi	r21, 0x40	; 64
     69c:	c7 01       	movw	r24, r14
     69e:	b6 01       	movw	r22, r12
     6a0:	0e 94 98 04 	call	0x930	; 0x930 <__cmpsf2>
     6a4:	18 16       	cp	r1, r24
     6a6:	dc f4       	brge	.+54     	; 0x6de <get_water_state+0xae>
	else if(height > WATER_MAX_HEIGHT/2.0 && height <= (3*WATER_MAX_HEIGHT)/4.0) return MEDIUM;
     6a8:	20 e0       	ldi	r18, 0x00	; 0
     6aa:	30 e0       	ldi	r19, 0x00	; 0
     6ac:	40 ef       	ldi	r20, 0xF0	; 240
     6ae:	50 e4       	ldi	r21, 0x40	; 64
     6b0:	c7 01       	movw	r24, r14
     6b2:	b6 01       	movw	r22, r12
     6b4:	0e 94 b6 05 	call	0xb6c	; 0xb6c <__gesf2>
     6b8:	18 16       	cp	r1, r24
     6ba:	9c f4       	brge	.+38     	; 0x6e2 <get_water_state+0xb2>
     6bc:	c1 e0       	ldi	r28, 0x01	; 1
     6be:	20 e0       	ldi	r18, 0x00	; 0
     6c0:	30 e0       	ldi	r19, 0x00	; 0
     6c2:	44 e3       	ldi	r20, 0x34	; 52
     6c4:	51 e4       	ldi	r21, 0x41	; 65
     6c6:	c7 01       	movw	r24, r14
     6c8:	b6 01       	movw	r22, r12
     6ca:	0e 94 98 04 	call	0x930	; 0x930 <__cmpsf2>
     6ce:	18 16       	cp	r1, r24
     6d0:	4c f4       	brge	.+18     	; 0x6e4 <get_water_state+0xb4>
     6d2:	c0 e0       	ldi	r28, 0x00	; 0
     6d4:	07 c0       	rjmp	.+14     	; 0x6e4 <get_water_state+0xb4>
 * when distance is lowest it returns HIGH
 ********/
water_state get_water_state(double height) {
	height -= WATER_TO_SONAR;
	if(height < 0) height = 0; 
	if(height <= WATER_MAX_HEIGHT/4.0 && height >= 0) return CRITICAL;
     6d6:	c3 e0       	ldi	r28, 0x03	; 3
     6d8:	05 c0       	rjmp	.+10     	; 0x6e4 <get_water_state+0xb4>
     6da:	c3 e0       	ldi	r28, 0x03	; 3
     6dc:	03 c0       	rjmp	.+6      	; 0x6e4 <get_water_state+0xb4>
	else if(height > WATER_MAX_HEIGHT/4.0 && height <= WATER_MAX_HEIGHT/2.0) return HIGH;
     6de:	c2 e0       	ldi	r28, 0x02	; 2
     6e0:	01 c0       	rjmp	.+2      	; 0x6e4 <get_water_state+0xb4>
	else if(height > WATER_MAX_HEIGHT/2.0 && height <= (3*WATER_MAX_HEIGHT)/4.0) return MEDIUM;
	return LOW;
     6e2:	c0 e0       	ldi	r28, 0x00	; 0
}
     6e4:	8c 2f       	mov	r24, r28
     6e6:	cf 91       	pop	r28
     6e8:	ff 90       	pop	r15
     6ea:	ef 90       	pop	r14
     6ec:	df 90       	pop	r13
     6ee:	cf 90       	pop	r12
     6f0:	08 95       	ret

000006f2 <__vector_1>:



ISR(INT0_vect)
{
     6f2:	1f 92       	push	r1
     6f4:	0f 92       	push	r0
     6f6:	0f b6       	in	r0, 0x3f	; 63
     6f8:	0f 92       	push	r0
     6fa:	11 24       	eor	r1, r1
     6fc:	8f 93       	push	r24
     6fe:	9f 93       	push	r25
	if (pulse_reached == 1)
     700:	80 91 9c 00 	lds	r24, 0x009C
     704:	90 91 9d 00 	lds	r25, 0x009D
     708:	01 97       	sbiw	r24, 0x01	; 1
     70a:	69 f4       	brne	.+26     	; 0x726 <__vector_1+0x34>
	{
		TCCR1B = 0;
     70c:	1e bc       	out	0x2e, r1	; 46
		pulse=TCNT1;
     70e:	8c b5       	in	r24, 0x2c	; 44
     710:	9d b5       	in	r25, 0x2d	; 45
     712:	90 93 9f 00 	sts	0x009F, r25
     716:	80 93 9e 00 	sts	0x009E, r24
		TCNT1=0;
     71a:	1d bc       	out	0x2d, r1	; 45
     71c:	1c bc       	out	0x2c, r1	; 44
		pulse_reached=0;
     71e:	10 92 9d 00 	sts	0x009D, r1
     722:	10 92 9c 00 	sts	0x009C, r1
	}
	if (pulse_reached==0)
     726:	80 91 9c 00 	lds	r24, 0x009C
     72a:	90 91 9d 00 	lds	r25, 0x009D
     72e:	89 2b       	or	r24, r25
     730:	49 f4       	brne	.+18     	; 0x744 <__vector_1+0x52>
	{
		TCCR1B|=(1<<CS10);
     732:	8e b5       	in	r24, 0x2e	; 46
     734:	81 60       	ori	r24, 0x01	; 1
     736:	8e bd       	out	0x2e, r24	; 46
		pulse_reached=1;
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	90 e0       	ldi	r25, 0x00	; 0
     73c:	90 93 9d 00 	sts	0x009D, r25
     740:	80 93 9c 00 	sts	0x009C, r24
	}
}
     744:	9f 91       	pop	r25
     746:	8f 91       	pop	r24
     748:	0f 90       	pop	r0
     74a:	0f be       	out	0x3f, r0	; 63
     74c:	0f 90       	pop	r0
     74e:	1f 90       	pop	r1
     750:	18 95       	reti

00000752 <main>:




int main(void)
{
     752:	cf 93       	push	r28
     754:	df 93       	push	r29
     756:	cd b7       	in	r28, 0x3d	; 61
     758:	de b7       	in	r29, 0x3e	; 62
     75a:	60 97       	sbiw	r28, 0x10	; 16
     75c:	0f b6       	in	r0, 0x3f	; 63
     75e:	f8 94       	cli
     760:	de bf       	out	0x3e, r29	; 62
     762:	0f be       	out	0x3f, r0	; 63
     764:	cd bf       	out	0x3d, r28	; 61
    DDRD = 0b11111011;
     766:	8b ef       	ldi	r24, 0xFB	; 251
     768:	81 bb       	out	0x11, r24	; 17
    DDRC = 0xFF;
     76a:	8f ef       	ldi	r24, 0xFF	; 255
     76c:	84 bb       	out	0x14, r24	; 20
	DDRA |= 0x01;
     76e:	d0 9a       	sbi	0x1a, 0	; 26
	PORTA &= ~(1 << PINA0);
     770:	d8 98       	cbi	0x1b, 0	; 27
		
	GICR|=(1<<INT0);
     772:	8b b7       	in	r24, 0x3b	; 59
     774:	80 64       	ori	r24, 0x40	; 64
     776:	8b bf       	out	0x3b, r24	; 59
	MCUCR|=(1<<ISC00);
     778:	85 b7       	in	r24, 0x35	; 53
     77a:	81 60       	ori	r24, 0x01	; 1
     77c:	85 bf       	out	0x35, r24	; 53
	
	TCCR1A = 0;
     77e:	1f bc       	out	0x2f, r1	; 47
	
	double sonar_reading = 0;
	char sonar_reading_display[16];
	sei();
     780:	78 94       	sei
	
	Lcd4_Init();
     782:	0e 94 8f 02 	call	0x51e	; 0x51e <Lcd4_Init>
	
	Lcd4_Clear();
     786:	0e 94 6b 02 	call	0x4d6	; 0x4d6 <Lcd4_Clear>
	Lcd4_Set_Cursor(1, 0);
     78a:	60 e0       	ldi	r22, 0x00	; 0
     78c:	81 e0       	ldi	r24, 0x01	; 1
     78e:	0e 94 72 02 	call	0x4e4	; 0x4e4 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Level: ");
     792:	80 e6       	ldi	r24, 0x60	; 96
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	0e 94 09 03 	call	0x612	; 0x612 <Lcd4_Write_String>
	
	Lcd4_Set_Cursor(2, 0);
     79a:	60 e0       	ldi	r22, 0x00	; 0
     79c:	82 e0       	ldi	r24, 0x02	; 2
     79e:	0e 94 72 02 	call	0x4e4	; 0x4e4 <Lcd4_Set_Cursor>
	Lcd4_Write_String("Distance: ");
     7a2:	88 e6       	ldi	r24, 0x68	; 104
     7a4:	90 e0       	ldi	r25, 0x00	; 0
     7a6:	0e 94 09 03 	call	0x612	; 0x612 <Lcd4_Write_String>
	
	while(1) {
		PORTD|=(1<<PIND0);
     7aa:	90 9a       	sbi	0x12, 0	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     7ac:	20 e5       	ldi	r18, 0x50	; 80
     7ae:	2a 95       	dec	r18
     7b0:	f1 f7       	brne	.-4      	; 0x7ae <main+0x5c>
		_delay_us(15);
		PORTD &=~(1<<PIND0);
     7b2:	90 98       	cbi	0x12, 0	; 18
		while(pulse_reached == 0);
     7b4:	80 91 9c 00 	lds	r24, 0x009C
     7b8:	90 91 9d 00 	lds	r25, 0x009D
     7bc:	89 2b       	or	r24, r25
     7be:	d1 f3       	breq	.-12     	; 0x7b4 <main+0x62>
		sonar_reading = (pulse*174.0)/10000;
     7c0:	60 91 9e 00 	lds	r22, 0x009E
     7c4:	70 91 9f 00 	lds	r23, 0x009F
     7c8:	80 e0       	ldi	r24, 0x00	; 0
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	0e 94 04 05 	call	0xa08	; 0xa08 <__floatunsisf>
     7d0:	20 e0       	ldi	r18, 0x00	; 0
     7d2:	30 e0       	ldi	r19, 0x00	; 0
     7d4:	4e e2       	ldi	r20, 0x2E	; 46
     7d6:	53 e4       	ldi	r21, 0x43	; 67
     7d8:	0e 94 ba 05 	call	0xb74	; 0xb74 <__mulsf3>
     7dc:	20 e0       	ldi	r18, 0x00	; 0
     7de:	30 e4       	ldi	r19, 0x40	; 64
     7e0:	4c e1       	ldi	r20, 0x1C	; 28
     7e2:	56 e4       	ldi	r21, 0x46	; 70
     7e4:	0e 94 9c 04 	call	0x938	; 0x938 <__divsf3>
     7e8:	6b 01       	movw	r12, r22
     7ea:	7c 01       	movw	r14, r24
		dtostrf(sonar_reading, 6, 2, sonar_reading_display);
     7ec:	8e 01       	movw	r16, r28
     7ee:	0f 5f       	subi	r16, 0xFF	; 255
     7f0:	1f 4f       	sbci	r17, 0xFF	; 255
     7f2:	22 e0       	ldi	r18, 0x02	; 2
     7f4:	46 e0       	ldi	r20, 0x06	; 6
     7f6:	0e 94 1d 06 	call	0xc3a	; 0xc3a <dtostrf>
		Lcd4_Set_Cursor(2, 10);
     7fa:	6a e0       	ldi	r22, 0x0A	; 10
     7fc:	82 e0       	ldi	r24, 0x02	; 2
     7fe:	0e 94 72 02 	call	0x4e4	; 0x4e4 <Lcd4_Set_Cursor>
		Lcd4_Write_String(sonar_reading_display);
     802:	c8 01       	movw	r24, r16
     804:	0e 94 09 03 	call	0x612	; 0x612 <Lcd4_Write_String>
		Lcd4_Set_Cursor(1, 7);
     808:	67 e0       	ldi	r22, 0x07	; 7
     80a:	81 e0       	ldi	r24, 0x01	; 1
     80c:	0e 94 72 02 	call	0x4e4	; 0x4e4 <Lcd4_Set_Cursor>
		if(get_water_state(sonar_reading) == LOW) {
     810:	c7 01       	movw	r24, r14
     812:	b6 01       	movw	r22, r12
     814:	0e 94 18 03 	call	0x630	; 0x630 <get_water_state>
     818:	81 11       	cpse	r24, r1
     81a:	06 c0       	rjmp	.+12     	; 0x828 <main+0xd6>
			Lcd4_Write_String("LOW      ");
     81c:	83 e7       	ldi	r24, 0x73	; 115
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	0e 94 09 03 	call	0x612	; 0x612 <Lcd4_Write_String>
			PORTA &= ~(1<<PINA0);
     824:	d8 98       	cbi	0x1b, 0	; 27
     826:	15 c0       	rjmp	.+42     	; 0x852 <main+0x100>
		}
		else if(get_water_state(sonar_reading) == MEDIUM) {
     828:	81 30       	cpi	r24, 0x01	; 1
     82a:	31 f4       	brne	.+12     	; 0x838 <main+0xe6>
			Lcd4_Write_String("MEDIUM   ");
     82c:	8d e7       	ldi	r24, 0x7D	; 125
     82e:	90 e0       	ldi	r25, 0x00	; 0
     830:	0e 94 09 03 	call	0x612	; 0x612 <Lcd4_Write_String>
			PORTA &= ~(1<<PINA0);
     834:	d8 98       	cbi	0x1b, 0	; 27
     836:	0d c0       	rjmp	.+26     	; 0x852 <main+0x100>
		}
		else if(get_water_state(sonar_reading) == HIGH) {
     838:	82 30       	cpi	r24, 0x02	; 2
     83a:	31 f4       	brne	.+12     	; 0x848 <main+0xf6>
			Lcd4_Write_String("HIGH     ");
     83c:	87 e8       	ldi	r24, 0x87	; 135
     83e:	90 e0       	ldi	r25, 0x00	; 0
     840:	0e 94 09 03 	call	0x612	; 0x612 <Lcd4_Write_String>
			PORTA &= ~(1<<PINA0);
     844:	d8 98       	cbi	0x1b, 0	; 27
     846:	05 c0       	rjmp	.+10     	; 0x852 <main+0x100>
		}
		else {
			Lcd4_Write_String("CRITICAL ");
     848:	81 e9       	ldi	r24, 0x91	; 145
     84a:	90 e0       	ldi	r25, 0x00	; 0
     84c:	0e 94 09 03 	call	0x612	; 0x612 <Lcd4_Write_String>
			PORTA |= (1<<PINA0);
     850:	d8 9a       	sbi	0x1b, 0	; 27
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     852:	8f ef       	ldi	r24, 0xFF	; 255
     854:	91 ee       	ldi	r25, 0xE1	; 225
     856:	24 e0       	ldi	r18, 0x04	; 4
     858:	81 50       	subi	r24, 0x01	; 1
     85a:	90 40       	sbci	r25, 0x00	; 0
     85c:	20 40       	sbci	r18, 0x00	; 0
     85e:	e1 f7       	brne	.-8      	; 0x858 <main+0x106>
     860:	00 c0       	rjmp	.+0      	; 0x862 <__stack+0x3>
     862:	00 00       	nop
     864:	a2 cf       	rjmp	.-188    	; 0x7aa <main+0x58>

00000866 <__subsf3>:
     866:	50 58       	subi	r21, 0x80	; 128

00000868 <__addsf3>:
     868:	bb 27       	eor	r27, r27
     86a:	aa 27       	eor	r26, r26
     86c:	0e d0       	rcall	.+28     	; 0x88a <__addsf3x>
     86e:	44 c1       	rjmp	.+648    	; 0xaf8 <__fp_round>
     870:	35 d1       	rcall	.+618    	; 0xadc <__fp_pscA>
     872:	30 f0       	brcs	.+12     	; 0x880 <__addsf3+0x18>
     874:	3a d1       	rcall	.+628    	; 0xaea <__fp_pscB>
     876:	20 f0       	brcs	.+8      	; 0x880 <__addsf3+0x18>
     878:	31 f4       	brne	.+12     	; 0x886 <__addsf3+0x1e>
     87a:	9f 3f       	cpi	r25, 0xFF	; 255
     87c:	11 f4       	brne	.+4      	; 0x882 <__addsf3+0x1a>
     87e:	1e f4       	brtc	.+6      	; 0x886 <__addsf3+0x1e>
     880:	2a c1       	rjmp	.+596    	; 0xad6 <__fp_nan>
     882:	0e f4       	brtc	.+2      	; 0x886 <__addsf3+0x1e>
     884:	e0 95       	com	r30
     886:	e7 fb       	bst	r30, 7
     888:	20 c1       	rjmp	.+576    	; 0xaca <__fp_inf>

0000088a <__addsf3x>:
     88a:	e9 2f       	mov	r30, r25
     88c:	46 d1       	rcall	.+652    	; 0xb1a <__fp_split3>
     88e:	80 f3       	brcs	.-32     	; 0x870 <__addsf3+0x8>
     890:	ba 17       	cp	r27, r26
     892:	62 07       	cpc	r22, r18
     894:	73 07       	cpc	r23, r19
     896:	84 07       	cpc	r24, r20
     898:	95 07       	cpc	r25, r21
     89a:	18 f0       	brcs	.+6      	; 0x8a2 <__addsf3x+0x18>
     89c:	71 f4       	brne	.+28     	; 0x8ba <__addsf3x+0x30>
     89e:	9e f5       	brtc	.+102    	; 0x906 <__addsf3x+0x7c>
     8a0:	5e c1       	rjmp	.+700    	; 0xb5e <__fp_zero>
     8a2:	0e f4       	brtc	.+2      	; 0x8a6 <__addsf3x+0x1c>
     8a4:	e0 95       	com	r30
     8a6:	0b 2e       	mov	r0, r27
     8a8:	ba 2f       	mov	r27, r26
     8aa:	a0 2d       	mov	r26, r0
     8ac:	0b 01       	movw	r0, r22
     8ae:	b9 01       	movw	r22, r18
     8b0:	90 01       	movw	r18, r0
     8b2:	0c 01       	movw	r0, r24
     8b4:	ca 01       	movw	r24, r20
     8b6:	a0 01       	movw	r20, r0
     8b8:	11 24       	eor	r1, r1
     8ba:	ff 27       	eor	r31, r31
     8bc:	59 1b       	sub	r21, r25
     8be:	99 f0       	breq	.+38     	; 0x8e6 <__addsf3x+0x5c>
     8c0:	59 3f       	cpi	r21, 0xF9	; 249
     8c2:	50 f4       	brcc	.+20     	; 0x8d8 <__addsf3x+0x4e>
     8c4:	50 3e       	cpi	r21, 0xE0	; 224
     8c6:	68 f1       	brcs	.+90     	; 0x922 <__addsf3x+0x98>
     8c8:	1a 16       	cp	r1, r26
     8ca:	f0 40       	sbci	r31, 0x00	; 0
     8cc:	a2 2f       	mov	r26, r18
     8ce:	23 2f       	mov	r18, r19
     8d0:	34 2f       	mov	r19, r20
     8d2:	44 27       	eor	r20, r20
     8d4:	58 5f       	subi	r21, 0xF8	; 248
     8d6:	f3 cf       	rjmp	.-26     	; 0x8be <__addsf3x+0x34>
     8d8:	46 95       	lsr	r20
     8da:	37 95       	ror	r19
     8dc:	27 95       	ror	r18
     8de:	a7 95       	ror	r26
     8e0:	f0 40       	sbci	r31, 0x00	; 0
     8e2:	53 95       	inc	r21
     8e4:	c9 f7       	brne	.-14     	; 0x8d8 <__addsf3x+0x4e>
     8e6:	7e f4       	brtc	.+30     	; 0x906 <__addsf3x+0x7c>
     8e8:	1f 16       	cp	r1, r31
     8ea:	ba 0b       	sbc	r27, r26
     8ec:	62 0b       	sbc	r22, r18
     8ee:	73 0b       	sbc	r23, r19
     8f0:	84 0b       	sbc	r24, r20
     8f2:	ba f0       	brmi	.+46     	; 0x922 <__addsf3x+0x98>
     8f4:	91 50       	subi	r25, 0x01	; 1
     8f6:	a1 f0       	breq	.+40     	; 0x920 <__addsf3x+0x96>
     8f8:	ff 0f       	add	r31, r31
     8fa:	bb 1f       	adc	r27, r27
     8fc:	66 1f       	adc	r22, r22
     8fe:	77 1f       	adc	r23, r23
     900:	88 1f       	adc	r24, r24
     902:	c2 f7       	brpl	.-16     	; 0x8f4 <__addsf3x+0x6a>
     904:	0e c0       	rjmp	.+28     	; 0x922 <__addsf3x+0x98>
     906:	ba 0f       	add	r27, r26
     908:	62 1f       	adc	r22, r18
     90a:	73 1f       	adc	r23, r19
     90c:	84 1f       	adc	r24, r20
     90e:	48 f4       	brcc	.+18     	; 0x922 <__addsf3x+0x98>
     910:	87 95       	ror	r24
     912:	77 95       	ror	r23
     914:	67 95       	ror	r22
     916:	b7 95       	ror	r27
     918:	f7 95       	ror	r31
     91a:	9e 3f       	cpi	r25, 0xFE	; 254
     91c:	08 f0       	brcs	.+2      	; 0x920 <__addsf3x+0x96>
     91e:	b3 cf       	rjmp	.-154    	; 0x886 <__addsf3+0x1e>
     920:	93 95       	inc	r25
     922:	88 0f       	add	r24, r24
     924:	08 f0       	brcs	.+2      	; 0x928 <__addsf3x+0x9e>
     926:	99 27       	eor	r25, r25
     928:	ee 0f       	add	r30, r30
     92a:	97 95       	ror	r25
     92c:	87 95       	ror	r24
     92e:	08 95       	ret

00000930 <__cmpsf2>:
     930:	a8 d0       	rcall	.+336    	; 0xa82 <__fp_cmp>
     932:	08 f4       	brcc	.+2      	; 0x936 <__cmpsf2+0x6>
     934:	81 e0       	ldi	r24, 0x01	; 1
     936:	08 95       	ret

00000938 <__divsf3>:
     938:	0c d0       	rcall	.+24     	; 0x952 <__divsf3x>
     93a:	de c0       	rjmp	.+444    	; 0xaf8 <__fp_round>
     93c:	d6 d0       	rcall	.+428    	; 0xaea <__fp_pscB>
     93e:	40 f0       	brcs	.+16     	; 0x950 <__divsf3+0x18>
     940:	cd d0       	rcall	.+410    	; 0xadc <__fp_pscA>
     942:	30 f0       	brcs	.+12     	; 0x950 <__divsf3+0x18>
     944:	21 f4       	brne	.+8      	; 0x94e <__divsf3+0x16>
     946:	5f 3f       	cpi	r21, 0xFF	; 255
     948:	19 f0       	breq	.+6      	; 0x950 <__divsf3+0x18>
     94a:	bf c0       	rjmp	.+382    	; 0xaca <__fp_inf>
     94c:	51 11       	cpse	r21, r1
     94e:	08 c1       	rjmp	.+528    	; 0xb60 <__fp_szero>
     950:	c2 c0       	rjmp	.+388    	; 0xad6 <__fp_nan>

00000952 <__divsf3x>:
     952:	e3 d0       	rcall	.+454    	; 0xb1a <__fp_split3>
     954:	98 f3       	brcs	.-26     	; 0x93c <__divsf3+0x4>

00000956 <__divsf3_pse>:
     956:	99 23       	and	r25, r25
     958:	c9 f3       	breq	.-14     	; 0x94c <__divsf3+0x14>
     95a:	55 23       	and	r21, r21
     95c:	b1 f3       	breq	.-20     	; 0x94a <__divsf3+0x12>
     95e:	95 1b       	sub	r25, r21
     960:	55 0b       	sbc	r21, r21
     962:	bb 27       	eor	r27, r27
     964:	aa 27       	eor	r26, r26
     966:	62 17       	cp	r22, r18
     968:	73 07       	cpc	r23, r19
     96a:	84 07       	cpc	r24, r20
     96c:	38 f0       	brcs	.+14     	; 0x97c <__divsf3_pse+0x26>
     96e:	9f 5f       	subi	r25, 0xFF	; 255
     970:	5f 4f       	sbci	r21, 0xFF	; 255
     972:	22 0f       	add	r18, r18
     974:	33 1f       	adc	r19, r19
     976:	44 1f       	adc	r20, r20
     978:	aa 1f       	adc	r26, r26
     97a:	a9 f3       	breq	.-22     	; 0x966 <__divsf3_pse+0x10>
     97c:	33 d0       	rcall	.+102    	; 0x9e4 <__divsf3_pse+0x8e>
     97e:	0e 2e       	mov	r0, r30
     980:	3a f0       	brmi	.+14     	; 0x990 <__divsf3_pse+0x3a>
     982:	e0 e8       	ldi	r30, 0x80	; 128
     984:	30 d0       	rcall	.+96     	; 0x9e6 <__divsf3_pse+0x90>
     986:	91 50       	subi	r25, 0x01	; 1
     988:	50 40       	sbci	r21, 0x00	; 0
     98a:	e6 95       	lsr	r30
     98c:	00 1c       	adc	r0, r0
     98e:	ca f7       	brpl	.-14     	; 0x982 <__divsf3_pse+0x2c>
     990:	29 d0       	rcall	.+82     	; 0x9e4 <__divsf3_pse+0x8e>
     992:	fe 2f       	mov	r31, r30
     994:	27 d0       	rcall	.+78     	; 0x9e4 <__divsf3_pse+0x8e>
     996:	66 0f       	add	r22, r22
     998:	77 1f       	adc	r23, r23
     99a:	88 1f       	adc	r24, r24
     99c:	bb 1f       	adc	r27, r27
     99e:	26 17       	cp	r18, r22
     9a0:	37 07       	cpc	r19, r23
     9a2:	48 07       	cpc	r20, r24
     9a4:	ab 07       	cpc	r26, r27
     9a6:	b0 e8       	ldi	r27, 0x80	; 128
     9a8:	09 f0       	breq	.+2      	; 0x9ac <__divsf3_pse+0x56>
     9aa:	bb 0b       	sbc	r27, r27
     9ac:	80 2d       	mov	r24, r0
     9ae:	bf 01       	movw	r22, r30
     9b0:	ff 27       	eor	r31, r31
     9b2:	93 58       	subi	r25, 0x83	; 131
     9b4:	5f 4f       	sbci	r21, 0xFF	; 255
     9b6:	2a f0       	brmi	.+10     	; 0x9c2 <__divsf3_pse+0x6c>
     9b8:	9e 3f       	cpi	r25, 0xFE	; 254
     9ba:	51 05       	cpc	r21, r1
     9bc:	68 f0       	brcs	.+26     	; 0x9d8 <__divsf3_pse+0x82>
     9be:	85 c0       	rjmp	.+266    	; 0xaca <__fp_inf>
     9c0:	cf c0       	rjmp	.+414    	; 0xb60 <__fp_szero>
     9c2:	5f 3f       	cpi	r21, 0xFF	; 255
     9c4:	ec f3       	brlt	.-6      	; 0x9c0 <__divsf3_pse+0x6a>
     9c6:	98 3e       	cpi	r25, 0xE8	; 232
     9c8:	dc f3       	brlt	.-10     	; 0x9c0 <__divsf3_pse+0x6a>
     9ca:	86 95       	lsr	r24
     9cc:	77 95       	ror	r23
     9ce:	67 95       	ror	r22
     9d0:	b7 95       	ror	r27
     9d2:	f7 95       	ror	r31
     9d4:	9f 5f       	subi	r25, 0xFF	; 255
     9d6:	c9 f7       	brne	.-14     	; 0x9ca <__divsf3_pse+0x74>
     9d8:	88 0f       	add	r24, r24
     9da:	91 1d       	adc	r25, r1
     9dc:	96 95       	lsr	r25
     9de:	87 95       	ror	r24
     9e0:	97 f9       	bld	r25, 7
     9e2:	08 95       	ret
     9e4:	e1 e0       	ldi	r30, 0x01	; 1
     9e6:	66 0f       	add	r22, r22
     9e8:	77 1f       	adc	r23, r23
     9ea:	88 1f       	adc	r24, r24
     9ec:	bb 1f       	adc	r27, r27
     9ee:	62 17       	cp	r22, r18
     9f0:	73 07       	cpc	r23, r19
     9f2:	84 07       	cpc	r24, r20
     9f4:	ba 07       	cpc	r27, r26
     9f6:	20 f0       	brcs	.+8      	; 0xa00 <__divsf3_pse+0xaa>
     9f8:	62 1b       	sub	r22, r18
     9fa:	73 0b       	sbc	r23, r19
     9fc:	84 0b       	sbc	r24, r20
     9fe:	ba 0b       	sbc	r27, r26
     a00:	ee 1f       	adc	r30, r30
     a02:	88 f7       	brcc	.-30     	; 0x9e6 <__divsf3_pse+0x90>
     a04:	e0 95       	com	r30
     a06:	08 95       	ret

00000a08 <__floatunsisf>:
     a08:	e8 94       	clt
     a0a:	09 c0       	rjmp	.+18     	; 0xa1e <__floatsisf+0x12>

00000a0c <__floatsisf>:
     a0c:	97 fb       	bst	r25, 7
     a0e:	3e f4       	brtc	.+14     	; 0xa1e <__floatsisf+0x12>
     a10:	90 95       	com	r25
     a12:	80 95       	com	r24
     a14:	70 95       	com	r23
     a16:	61 95       	neg	r22
     a18:	7f 4f       	sbci	r23, 0xFF	; 255
     a1a:	8f 4f       	sbci	r24, 0xFF	; 255
     a1c:	9f 4f       	sbci	r25, 0xFF	; 255
     a1e:	99 23       	and	r25, r25
     a20:	a9 f0       	breq	.+42     	; 0xa4c <__floatsisf+0x40>
     a22:	f9 2f       	mov	r31, r25
     a24:	96 e9       	ldi	r25, 0x96	; 150
     a26:	bb 27       	eor	r27, r27
     a28:	93 95       	inc	r25
     a2a:	f6 95       	lsr	r31
     a2c:	87 95       	ror	r24
     a2e:	77 95       	ror	r23
     a30:	67 95       	ror	r22
     a32:	b7 95       	ror	r27
     a34:	f1 11       	cpse	r31, r1
     a36:	f8 cf       	rjmp	.-16     	; 0xa28 <__floatsisf+0x1c>
     a38:	fa f4       	brpl	.+62     	; 0xa78 <__floatsisf+0x6c>
     a3a:	bb 0f       	add	r27, r27
     a3c:	11 f4       	brne	.+4      	; 0xa42 <__floatsisf+0x36>
     a3e:	60 ff       	sbrs	r22, 0
     a40:	1b c0       	rjmp	.+54     	; 0xa78 <__floatsisf+0x6c>
     a42:	6f 5f       	subi	r22, 0xFF	; 255
     a44:	7f 4f       	sbci	r23, 0xFF	; 255
     a46:	8f 4f       	sbci	r24, 0xFF	; 255
     a48:	9f 4f       	sbci	r25, 0xFF	; 255
     a4a:	16 c0       	rjmp	.+44     	; 0xa78 <__floatsisf+0x6c>
     a4c:	88 23       	and	r24, r24
     a4e:	11 f0       	breq	.+4      	; 0xa54 <__floatsisf+0x48>
     a50:	96 e9       	ldi	r25, 0x96	; 150
     a52:	11 c0       	rjmp	.+34     	; 0xa76 <__floatsisf+0x6a>
     a54:	77 23       	and	r23, r23
     a56:	21 f0       	breq	.+8      	; 0xa60 <__floatsisf+0x54>
     a58:	9e e8       	ldi	r25, 0x8E	; 142
     a5a:	87 2f       	mov	r24, r23
     a5c:	76 2f       	mov	r23, r22
     a5e:	05 c0       	rjmp	.+10     	; 0xa6a <__floatsisf+0x5e>
     a60:	66 23       	and	r22, r22
     a62:	71 f0       	breq	.+28     	; 0xa80 <__floatsisf+0x74>
     a64:	96 e8       	ldi	r25, 0x86	; 134
     a66:	86 2f       	mov	r24, r22
     a68:	70 e0       	ldi	r23, 0x00	; 0
     a6a:	60 e0       	ldi	r22, 0x00	; 0
     a6c:	2a f0       	brmi	.+10     	; 0xa78 <__floatsisf+0x6c>
     a6e:	9a 95       	dec	r25
     a70:	66 0f       	add	r22, r22
     a72:	77 1f       	adc	r23, r23
     a74:	88 1f       	adc	r24, r24
     a76:	da f7       	brpl	.-10     	; 0xa6e <__floatsisf+0x62>
     a78:	88 0f       	add	r24, r24
     a7a:	96 95       	lsr	r25
     a7c:	87 95       	ror	r24
     a7e:	97 f9       	bld	r25, 7
     a80:	08 95       	ret

00000a82 <__fp_cmp>:
     a82:	99 0f       	add	r25, r25
     a84:	00 08       	sbc	r0, r0
     a86:	55 0f       	add	r21, r21
     a88:	aa 0b       	sbc	r26, r26
     a8a:	e0 e8       	ldi	r30, 0x80	; 128
     a8c:	fe ef       	ldi	r31, 0xFE	; 254
     a8e:	16 16       	cp	r1, r22
     a90:	17 06       	cpc	r1, r23
     a92:	e8 07       	cpc	r30, r24
     a94:	f9 07       	cpc	r31, r25
     a96:	c0 f0       	brcs	.+48     	; 0xac8 <__fp_cmp+0x46>
     a98:	12 16       	cp	r1, r18
     a9a:	13 06       	cpc	r1, r19
     a9c:	e4 07       	cpc	r30, r20
     a9e:	f5 07       	cpc	r31, r21
     aa0:	98 f0       	brcs	.+38     	; 0xac8 <__fp_cmp+0x46>
     aa2:	62 1b       	sub	r22, r18
     aa4:	73 0b       	sbc	r23, r19
     aa6:	84 0b       	sbc	r24, r20
     aa8:	95 0b       	sbc	r25, r21
     aaa:	39 f4       	brne	.+14     	; 0xaba <__fp_cmp+0x38>
     aac:	0a 26       	eor	r0, r26
     aae:	61 f0       	breq	.+24     	; 0xac8 <__fp_cmp+0x46>
     ab0:	23 2b       	or	r18, r19
     ab2:	24 2b       	or	r18, r20
     ab4:	25 2b       	or	r18, r21
     ab6:	21 f4       	brne	.+8      	; 0xac0 <__fp_cmp+0x3e>
     ab8:	08 95       	ret
     aba:	0a 26       	eor	r0, r26
     abc:	09 f4       	brne	.+2      	; 0xac0 <__fp_cmp+0x3e>
     abe:	a1 40       	sbci	r26, 0x01	; 1
     ac0:	a6 95       	lsr	r26
     ac2:	8f ef       	ldi	r24, 0xFF	; 255
     ac4:	81 1d       	adc	r24, r1
     ac6:	81 1d       	adc	r24, r1
     ac8:	08 95       	ret

00000aca <__fp_inf>:
     aca:	97 f9       	bld	r25, 7
     acc:	9f 67       	ori	r25, 0x7F	; 127
     ace:	80 e8       	ldi	r24, 0x80	; 128
     ad0:	70 e0       	ldi	r23, 0x00	; 0
     ad2:	60 e0       	ldi	r22, 0x00	; 0
     ad4:	08 95       	ret

00000ad6 <__fp_nan>:
     ad6:	9f ef       	ldi	r25, 0xFF	; 255
     ad8:	80 ec       	ldi	r24, 0xC0	; 192
     ada:	08 95       	ret

00000adc <__fp_pscA>:
     adc:	00 24       	eor	r0, r0
     ade:	0a 94       	dec	r0
     ae0:	16 16       	cp	r1, r22
     ae2:	17 06       	cpc	r1, r23
     ae4:	18 06       	cpc	r1, r24
     ae6:	09 06       	cpc	r0, r25
     ae8:	08 95       	ret

00000aea <__fp_pscB>:
     aea:	00 24       	eor	r0, r0
     aec:	0a 94       	dec	r0
     aee:	12 16       	cp	r1, r18
     af0:	13 06       	cpc	r1, r19
     af2:	14 06       	cpc	r1, r20
     af4:	05 06       	cpc	r0, r21
     af6:	08 95       	ret

00000af8 <__fp_round>:
     af8:	09 2e       	mov	r0, r25
     afa:	03 94       	inc	r0
     afc:	00 0c       	add	r0, r0
     afe:	11 f4       	brne	.+4      	; 0xb04 <__fp_round+0xc>
     b00:	88 23       	and	r24, r24
     b02:	52 f0       	brmi	.+20     	; 0xb18 <__fp_round+0x20>
     b04:	bb 0f       	add	r27, r27
     b06:	40 f4       	brcc	.+16     	; 0xb18 <__fp_round+0x20>
     b08:	bf 2b       	or	r27, r31
     b0a:	11 f4       	brne	.+4      	; 0xb10 <__fp_round+0x18>
     b0c:	60 ff       	sbrs	r22, 0
     b0e:	04 c0       	rjmp	.+8      	; 0xb18 <__fp_round+0x20>
     b10:	6f 5f       	subi	r22, 0xFF	; 255
     b12:	7f 4f       	sbci	r23, 0xFF	; 255
     b14:	8f 4f       	sbci	r24, 0xFF	; 255
     b16:	9f 4f       	sbci	r25, 0xFF	; 255
     b18:	08 95       	ret

00000b1a <__fp_split3>:
     b1a:	57 fd       	sbrc	r21, 7
     b1c:	90 58       	subi	r25, 0x80	; 128
     b1e:	44 0f       	add	r20, r20
     b20:	55 1f       	adc	r21, r21
     b22:	59 f0       	breq	.+22     	; 0xb3a <__fp_splitA+0x10>
     b24:	5f 3f       	cpi	r21, 0xFF	; 255
     b26:	71 f0       	breq	.+28     	; 0xb44 <__fp_splitA+0x1a>
     b28:	47 95       	ror	r20

00000b2a <__fp_splitA>:
     b2a:	88 0f       	add	r24, r24
     b2c:	97 fb       	bst	r25, 7
     b2e:	99 1f       	adc	r25, r25
     b30:	61 f0       	breq	.+24     	; 0xb4a <__fp_splitA+0x20>
     b32:	9f 3f       	cpi	r25, 0xFF	; 255
     b34:	79 f0       	breq	.+30     	; 0xb54 <__fp_splitA+0x2a>
     b36:	87 95       	ror	r24
     b38:	08 95       	ret
     b3a:	12 16       	cp	r1, r18
     b3c:	13 06       	cpc	r1, r19
     b3e:	14 06       	cpc	r1, r20
     b40:	55 1f       	adc	r21, r21
     b42:	f2 cf       	rjmp	.-28     	; 0xb28 <__fp_split3+0xe>
     b44:	46 95       	lsr	r20
     b46:	f1 df       	rcall	.-30     	; 0xb2a <__fp_splitA>
     b48:	08 c0       	rjmp	.+16     	; 0xb5a <__fp_splitA+0x30>
     b4a:	16 16       	cp	r1, r22
     b4c:	17 06       	cpc	r1, r23
     b4e:	18 06       	cpc	r1, r24
     b50:	99 1f       	adc	r25, r25
     b52:	f1 cf       	rjmp	.-30     	; 0xb36 <__fp_splitA+0xc>
     b54:	86 95       	lsr	r24
     b56:	71 05       	cpc	r23, r1
     b58:	61 05       	cpc	r22, r1
     b5a:	08 94       	sec
     b5c:	08 95       	ret

00000b5e <__fp_zero>:
     b5e:	e8 94       	clt

00000b60 <__fp_szero>:
     b60:	bb 27       	eor	r27, r27
     b62:	66 27       	eor	r22, r22
     b64:	77 27       	eor	r23, r23
     b66:	cb 01       	movw	r24, r22
     b68:	97 f9       	bld	r25, 7
     b6a:	08 95       	ret

00000b6c <__gesf2>:
     b6c:	8a df       	rcall	.-236    	; 0xa82 <__fp_cmp>
     b6e:	08 f4       	brcc	.+2      	; 0xb72 <__gesf2+0x6>
     b70:	8f ef       	ldi	r24, 0xFF	; 255
     b72:	08 95       	ret

00000b74 <__mulsf3>:
     b74:	0b d0       	rcall	.+22     	; 0xb8c <__mulsf3x>
     b76:	c0 cf       	rjmp	.-128    	; 0xaf8 <__fp_round>
     b78:	b1 df       	rcall	.-158    	; 0xadc <__fp_pscA>
     b7a:	28 f0       	brcs	.+10     	; 0xb86 <__mulsf3+0x12>
     b7c:	b6 df       	rcall	.-148    	; 0xaea <__fp_pscB>
     b7e:	18 f0       	brcs	.+6      	; 0xb86 <__mulsf3+0x12>
     b80:	95 23       	and	r25, r21
     b82:	09 f0       	breq	.+2      	; 0xb86 <__mulsf3+0x12>
     b84:	a2 cf       	rjmp	.-188    	; 0xaca <__fp_inf>
     b86:	a7 cf       	rjmp	.-178    	; 0xad6 <__fp_nan>
     b88:	11 24       	eor	r1, r1
     b8a:	ea cf       	rjmp	.-44     	; 0xb60 <__fp_szero>

00000b8c <__mulsf3x>:
     b8c:	c6 df       	rcall	.-116    	; 0xb1a <__fp_split3>
     b8e:	a0 f3       	brcs	.-24     	; 0xb78 <__mulsf3+0x4>

00000b90 <__mulsf3_pse>:
     b90:	95 9f       	mul	r25, r21
     b92:	d1 f3       	breq	.-12     	; 0xb88 <__mulsf3+0x14>
     b94:	95 0f       	add	r25, r21
     b96:	50 e0       	ldi	r21, 0x00	; 0
     b98:	55 1f       	adc	r21, r21
     b9a:	62 9f       	mul	r22, r18
     b9c:	f0 01       	movw	r30, r0
     b9e:	72 9f       	mul	r23, r18
     ba0:	bb 27       	eor	r27, r27
     ba2:	f0 0d       	add	r31, r0
     ba4:	b1 1d       	adc	r27, r1
     ba6:	63 9f       	mul	r22, r19
     ba8:	aa 27       	eor	r26, r26
     baa:	f0 0d       	add	r31, r0
     bac:	b1 1d       	adc	r27, r1
     bae:	aa 1f       	adc	r26, r26
     bb0:	64 9f       	mul	r22, r20
     bb2:	66 27       	eor	r22, r22
     bb4:	b0 0d       	add	r27, r0
     bb6:	a1 1d       	adc	r26, r1
     bb8:	66 1f       	adc	r22, r22
     bba:	82 9f       	mul	r24, r18
     bbc:	22 27       	eor	r18, r18
     bbe:	b0 0d       	add	r27, r0
     bc0:	a1 1d       	adc	r26, r1
     bc2:	62 1f       	adc	r22, r18
     bc4:	73 9f       	mul	r23, r19
     bc6:	b0 0d       	add	r27, r0
     bc8:	a1 1d       	adc	r26, r1
     bca:	62 1f       	adc	r22, r18
     bcc:	83 9f       	mul	r24, r19
     bce:	a0 0d       	add	r26, r0
     bd0:	61 1d       	adc	r22, r1
     bd2:	22 1f       	adc	r18, r18
     bd4:	74 9f       	mul	r23, r20
     bd6:	33 27       	eor	r19, r19
     bd8:	a0 0d       	add	r26, r0
     bda:	61 1d       	adc	r22, r1
     bdc:	23 1f       	adc	r18, r19
     bde:	84 9f       	mul	r24, r20
     be0:	60 0d       	add	r22, r0
     be2:	21 1d       	adc	r18, r1
     be4:	82 2f       	mov	r24, r18
     be6:	76 2f       	mov	r23, r22
     be8:	6a 2f       	mov	r22, r26
     bea:	11 24       	eor	r1, r1
     bec:	9f 57       	subi	r25, 0x7F	; 127
     bee:	50 40       	sbci	r21, 0x00	; 0
     bf0:	8a f0       	brmi	.+34     	; 0xc14 <__mulsf3_pse+0x84>
     bf2:	e1 f0       	breq	.+56     	; 0xc2c <__mulsf3_pse+0x9c>
     bf4:	88 23       	and	r24, r24
     bf6:	4a f0       	brmi	.+18     	; 0xc0a <__mulsf3_pse+0x7a>
     bf8:	ee 0f       	add	r30, r30
     bfa:	ff 1f       	adc	r31, r31
     bfc:	bb 1f       	adc	r27, r27
     bfe:	66 1f       	adc	r22, r22
     c00:	77 1f       	adc	r23, r23
     c02:	88 1f       	adc	r24, r24
     c04:	91 50       	subi	r25, 0x01	; 1
     c06:	50 40       	sbci	r21, 0x00	; 0
     c08:	a9 f7       	brne	.-22     	; 0xbf4 <__mulsf3_pse+0x64>
     c0a:	9e 3f       	cpi	r25, 0xFE	; 254
     c0c:	51 05       	cpc	r21, r1
     c0e:	70 f0       	brcs	.+28     	; 0xc2c <__mulsf3_pse+0x9c>
     c10:	5c cf       	rjmp	.-328    	; 0xaca <__fp_inf>
     c12:	a6 cf       	rjmp	.-180    	; 0xb60 <__fp_szero>
     c14:	5f 3f       	cpi	r21, 0xFF	; 255
     c16:	ec f3       	brlt	.-6      	; 0xc12 <__mulsf3_pse+0x82>
     c18:	98 3e       	cpi	r25, 0xE8	; 232
     c1a:	dc f3       	brlt	.-10     	; 0xc12 <__mulsf3_pse+0x82>
     c1c:	86 95       	lsr	r24
     c1e:	77 95       	ror	r23
     c20:	67 95       	ror	r22
     c22:	b7 95       	ror	r27
     c24:	f7 95       	ror	r31
     c26:	e7 95       	ror	r30
     c28:	9f 5f       	subi	r25, 0xFF	; 255
     c2a:	c1 f7       	brne	.-16     	; 0xc1c <__mulsf3_pse+0x8c>
     c2c:	fe 2b       	or	r31, r30
     c2e:	88 0f       	add	r24, r24
     c30:	91 1d       	adc	r25, r1
     c32:	96 95       	lsr	r25
     c34:	87 95       	ror	r24
     c36:	97 f9       	bld	r25, 7
     c38:	08 95       	ret

00000c3a <dtostrf>:
     c3a:	ef 92       	push	r14
     c3c:	0f 93       	push	r16
     c3e:	1f 93       	push	r17
     c40:	cf 93       	push	r28
     c42:	df 93       	push	r29
     c44:	e8 01       	movw	r28, r16
     c46:	47 ff       	sbrs	r20, 7
     c48:	02 c0       	rjmp	.+4      	; 0xc4e <dtostrf+0x14>
     c4a:	34 e1       	ldi	r19, 0x14	; 20
     c4c:	01 c0       	rjmp	.+2      	; 0xc50 <dtostrf+0x16>
     c4e:	34 e0       	ldi	r19, 0x04	; 4
     c50:	e4 2f       	mov	r30, r20
     c52:	ff 27       	eor	r31, r31
     c54:	e7 fd       	sbrc	r30, 7
     c56:	f0 95       	com	r31
     c58:	f7 ff       	sbrs	r31, 7
     c5a:	03 c0       	rjmp	.+6      	; 0xc62 <dtostrf+0x28>
     c5c:	f1 95       	neg	r31
     c5e:	e1 95       	neg	r30
     c60:	f1 09       	sbc	r31, r1
     c62:	e3 2e       	mov	r14, r19
     c64:	02 2f       	mov	r16, r18
     c66:	2e 2f       	mov	r18, r30
     c68:	ae 01       	movw	r20, r28
     c6a:	0e 94 3e 06 	call	0xc7c	; 0xc7c <dtoa_prf>
     c6e:	ce 01       	movw	r24, r28
     c70:	df 91       	pop	r29
     c72:	cf 91       	pop	r28
     c74:	1f 91       	pop	r17
     c76:	0f 91       	pop	r16
     c78:	ef 90       	pop	r14
     c7a:	08 95       	ret

00000c7c <dtoa_prf>:
     c7c:	6f 92       	push	r6
     c7e:	7f 92       	push	r7
     c80:	9f 92       	push	r9
     c82:	af 92       	push	r10
     c84:	bf 92       	push	r11
     c86:	cf 92       	push	r12
     c88:	df 92       	push	r13
     c8a:	ef 92       	push	r14
     c8c:	ff 92       	push	r15
     c8e:	0f 93       	push	r16
     c90:	1f 93       	push	r17
     c92:	cf 93       	push	r28
     c94:	df 93       	push	r29
     c96:	cd b7       	in	r28, 0x3d	; 61
     c98:	de b7       	in	r29, 0x3e	; 62
     c9a:	29 97       	sbiw	r28, 0x09	; 9
     c9c:	0f b6       	in	r0, 0x3f	; 63
     c9e:	f8 94       	cli
     ca0:	de bf       	out	0x3e, r29	; 62
     ca2:	0f be       	out	0x3f, r0	; 63
     ca4:	cd bf       	out	0x3d, r28	; 61
     ca6:	6a 01       	movw	r12, r20
     ca8:	b2 2e       	mov	r11, r18
     caa:	10 2f       	mov	r17, r16
     cac:	0c 33       	cpi	r16, 0x3C	; 60
     cae:	20 f4       	brcc	.+8      	; 0xcb8 <dtoa_prf+0x3c>
     cb0:	ff 24       	eor	r15, r15
     cb2:	f3 94       	inc	r15
     cb4:	f0 0e       	add	r15, r16
     cb6:	02 c0       	rjmp	.+4      	; 0xcbc <dtoa_prf+0x40>
     cb8:	4c e3       	ldi	r20, 0x3C	; 60
     cba:	f4 2e       	mov	r15, r20
     cbc:	0f 2d       	mov	r16, r15
     cbe:	27 e0       	ldi	r18, 0x07	; 7
     cc0:	ae 01       	movw	r20, r28
     cc2:	4f 5f       	subi	r20, 0xFF	; 255
     cc4:	5f 4f       	sbci	r21, 0xFF	; 255
     cc6:	0e 94 bc 07 	call	0xf78	; 0xf78 <__ftoa_engine>
     cca:	79 81       	ldd	r23, Y+1	; 0x01
     ccc:	27 2f       	mov	r18, r23
     cce:	29 70       	andi	r18, 0x09	; 9
     cd0:	21 30       	cpi	r18, 0x01	; 1
     cd2:	31 f0       	breq	.+12     	; 0xce0 <dtoa_prf+0x64>
     cd4:	e1 fc       	sbrc	r14, 1
     cd6:	06 c0       	rjmp	.+12     	; 0xce4 <dtoa_prf+0x68>
     cd8:	e0 fc       	sbrc	r14, 0
     cda:	06 c0       	rjmp	.+12     	; 0xce8 <dtoa_prf+0x6c>
     cdc:	60 e0       	ldi	r22, 0x00	; 0
     cde:	05 c0       	rjmp	.+10     	; 0xcea <dtoa_prf+0x6e>
     ce0:	6d e2       	ldi	r22, 0x2D	; 45
     ce2:	03 c0       	rjmp	.+6      	; 0xcea <dtoa_prf+0x6e>
     ce4:	6b e2       	ldi	r22, 0x2B	; 43
     ce6:	01 c0       	rjmp	.+2      	; 0xcea <dtoa_prf+0x6e>
     ce8:	60 e2       	ldi	r22, 0x20	; 32
     cea:	ae 2d       	mov	r26, r14
     cec:	a0 71       	andi	r26, 0x10	; 16
     cee:	73 ff       	sbrs	r23, 3
     cf0:	36 c0       	rjmp	.+108    	; 0xd5e <dtoa_prf+0xe2>
     cf2:	66 23       	and	r22, r22
     cf4:	11 f0       	breq	.+4      	; 0xcfa <dtoa_prf+0x7e>
     cf6:	84 e0       	ldi	r24, 0x04	; 4
     cf8:	01 c0       	rjmp	.+2      	; 0xcfc <dtoa_prf+0x80>
     cfa:	83 e0       	ldi	r24, 0x03	; 3
     cfc:	8b 15       	cp	r24, r11
     cfe:	10 f4       	brcc	.+4      	; 0xd04 <dtoa_prf+0x88>
     d00:	b8 1a       	sub	r11, r24
     d02:	01 c0       	rjmp	.+2      	; 0xd06 <dtoa_prf+0x8a>
     d04:	b1 2c       	mov	r11, r1
     d06:	a1 11       	cpse	r26, r1
     d08:	0b c0       	rjmp	.+22     	; 0xd20 <dtoa_prf+0xa4>
     d0a:	f6 01       	movw	r30, r12
     d0c:	8b 2d       	mov	r24, r11
     d0e:	90 e2       	ldi	r25, 0x20	; 32
     d10:	88 23       	and	r24, r24
     d12:	19 f0       	breq	.+6      	; 0xd1a <dtoa_prf+0x9e>
     d14:	91 93       	st	Z+, r25
     d16:	81 50       	subi	r24, 0x01	; 1
     d18:	fb cf       	rjmp	.-10     	; 0xd10 <dtoa_prf+0x94>
     d1a:	cb 0c       	add	r12, r11
     d1c:	d1 1c       	adc	r13, r1
     d1e:	b1 2c       	mov	r11, r1
     d20:	66 23       	and	r22, r22
     d22:	31 f0       	breq	.+12     	; 0xd30 <dtoa_prf+0xb4>
     d24:	f6 01       	movw	r30, r12
     d26:	60 83       	st	Z, r22
     d28:	96 01       	movw	r18, r12
     d2a:	2f 5f       	subi	r18, 0xFF	; 255
     d2c:	3f 4f       	sbci	r19, 0xFF	; 255
     d2e:	69 01       	movw	r12, r18
     d30:	c6 01       	movw	r24, r12
     d32:	03 96       	adiw	r24, 0x03	; 3
     d34:	e2 fe       	sbrs	r14, 2
     d36:	05 c0       	rjmp	.+10     	; 0xd42 <dtoa_prf+0xc6>
     d38:	2e e4       	ldi	r18, 0x4E	; 78
     d3a:	f6 01       	movw	r30, r12
     d3c:	20 83       	st	Z, r18
     d3e:	31 e4       	ldi	r19, 0x41	; 65
     d40:	04 c0       	rjmp	.+8      	; 0xd4a <dtoa_prf+0xce>
     d42:	2e e6       	ldi	r18, 0x6E	; 110
     d44:	f6 01       	movw	r30, r12
     d46:	20 83       	st	Z, r18
     d48:	31 e6       	ldi	r19, 0x61	; 97
     d4a:	31 83       	std	Z+1, r19	; 0x01
     d4c:	22 83       	std	Z+2, r18	; 0x02
     d4e:	fc 01       	movw	r30, r24
     d50:	2b 2d       	mov	r18, r11
     d52:	30 e2       	ldi	r19, 0x20	; 32
     d54:	22 23       	and	r18, r18
     d56:	f1 f1       	breq	.+124    	; 0xdd4 <dtoa_prf+0x158>
     d58:	31 93       	st	Z+, r19
     d5a:	21 50       	subi	r18, 0x01	; 1
     d5c:	fb cf       	rjmp	.-10     	; 0xd54 <dtoa_prf+0xd8>
     d5e:	72 ff       	sbrs	r23, 2
     d60:	40 c0       	rjmp	.+128    	; 0xde2 <dtoa_prf+0x166>
     d62:	66 23       	and	r22, r22
     d64:	11 f0       	breq	.+4      	; 0xd6a <dtoa_prf+0xee>
     d66:	84 e0       	ldi	r24, 0x04	; 4
     d68:	01 c0       	rjmp	.+2      	; 0xd6c <dtoa_prf+0xf0>
     d6a:	83 e0       	ldi	r24, 0x03	; 3
     d6c:	8b 15       	cp	r24, r11
     d6e:	10 f4       	brcc	.+4      	; 0xd74 <dtoa_prf+0xf8>
     d70:	b8 1a       	sub	r11, r24
     d72:	01 c0       	rjmp	.+2      	; 0xd76 <dtoa_prf+0xfa>
     d74:	b1 2c       	mov	r11, r1
     d76:	a1 11       	cpse	r26, r1
     d78:	0b c0       	rjmp	.+22     	; 0xd90 <dtoa_prf+0x114>
     d7a:	f6 01       	movw	r30, r12
     d7c:	8b 2d       	mov	r24, r11
     d7e:	90 e2       	ldi	r25, 0x20	; 32
     d80:	88 23       	and	r24, r24
     d82:	19 f0       	breq	.+6      	; 0xd8a <dtoa_prf+0x10e>
     d84:	91 93       	st	Z+, r25
     d86:	81 50       	subi	r24, 0x01	; 1
     d88:	fb cf       	rjmp	.-10     	; 0xd80 <dtoa_prf+0x104>
     d8a:	cb 0c       	add	r12, r11
     d8c:	d1 1c       	adc	r13, r1
     d8e:	b1 2c       	mov	r11, r1
     d90:	66 23       	and	r22, r22
     d92:	31 f0       	breq	.+12     	; 0xda0 <dtoa_prf+0x124>
     d94:	f6 01       	movw	r30, r12
     d96:	60 83       	st	Z, r22
     d98:	96 01       	movw	r18, r12
     d9a:	2f 5f       	subi	r18, 0xFF	; 255
     d9c:	3f 4f       	sbci	r19, 0xFF	; 255
     d9e:	69 01       	movw	r12, r18
     da0:	c6 01       	movw	r24, r12
     da2:	03 96       	adiw	r24, 0x03	; 3
     da4:	e2 fe       	sbrs	r14, 2
     da6:	07 c0       	rjmp	.+14     	; 0xdb6 <dtoa_prf+0x13a>
     da8:	29 e4       	ldi	r18, 0x49	; 73
     daa:	f6 01       	movw	r30, r12
     dac:	20 83       	st	Z, r18
     dae:	2e e4       	ldi	r18, 0x4E	; 78
     db0:	21 83       	std	Z+1, r18	; 0x01
     db2:	26 e4       	ldi	r18, 0x46	; 70
     db4:	06 c0       	rjmp	.+12     	; 0xdc2 <dtoa_prf+0x146>
     db6:	29 e6       	ldi	r18, 0x69	; 105
     db8:	f6 01       	movw	r30, r12
     dba:	20 83       	st	Z, r18
     dbc:	2e e6       	ldi	r18, 0x6E	; 110
     dbe:	21 83       	std	Z+1, r18	; 0x01
     dc0:	26 e6       	ldi	r18, 0x66	; 102
     dc2:	22 83       	std	Z+2, r18	; 0x02
     dc4:	fc 01       	movw	r30, r24
     dc6:	2b 2d       	mov	r18, r11
     dc8:	30 e2       	ldi	r19, 0x20	; 32
     dca:	22 23       	and	r18, r18
     dcc:	19 f0       	breq	.+6      	; 0xdd4 <dtoa_prf+0x158>
     dce:	31 93       	st	Z+, r19
     dd0:	21 50       	subi	r18, 0x01	; 1
     dd2:	fb cf       	rjmp	.-10     	; 0xdca <dtoa_prf+0x14e>
     dd4:	fc 01       	movw	r30, r24
     dd6:	eb 0d       	add	r30, r11
     dd8:	f1 1d       	adc	r31, r1
     dda:	10 82       	st	Z, r1
     ddc:	8e ef       	ldi	r24, 0xFE	; 254
     dde:	9f ef       	ldi	r25, 0xFF	; 255
     de0:	b7 c0       	rjmp	.+366    	; 0xf50 <dtoa_prf+0x2d4>
     de2:	b1 e0       	ldi	r27, 0x01	; 1
     de4:	61 11       	cpse	r22, r1
     de6:	01 c0       	rjmp	.+2      	; 0xdea <dtoa_prf+0x16e>
     de8:	b0 e0       	ldi	r27, 0x00	; 0
     dea:	4b 2f       	mov	r20, r27
     dec:	50 e0       	ldi	r21, 0x00	; 0
     dee:	18 16       	cp	r1, r24
     df0:	19 06       	cpc	r1, r25
     df2:	24 f4       	brge	.+8      	; 0xdfc <dtoa_prf+0x180>
     df4:	9c 01       	movw	r18, r24
     df6:	2f 5f       	subi	r18, 0xFF	; 255
     df8:	3f 4f       	sbci	r19, 0xFF	; 255
     dfa:	02 c0       	rjmp	.+4      	; 0xe00 <dtoa_prf+0x184>
     dfc:	21 e0       	ldi	r18, 0x01	; 1
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	24 0f       	add	r18, r20
     e02:	35 1f       	adc	r19, r21
     e04:	11 23       	and	r17, r17
     e06:	29 f0       	breq	.+10     	; 0xe12 <dtoa_prf+0x196>
     e08:	41 2f       	mov	r20, r17
     e0a:	50 e0       	ldi	r21, 0x00	; 0
     e0c:	4f 5f       	subi	r20, 0xFF	; 255
     e0e:	5f 4f       	sbci	r21, 0xFF	; 255
     e10:	02 c0       	rjmp	.+4      	; 0xe16 <dtoa_prf+0x19a>
     e12:	40 e0       	ldi	r20, 0x00	; 0
     e14:	50 e0       	ldi	r21, 0x00	; 0
     e16:	42 0f       	add	r20, r18
     e18:	53 1f       	adc	r21, r19
     e1a:	2b 2d       	mov	r18, r11
     e1c:	30 e0       	ldi	r19, 0x00	; 0
     e1e:	42 17       	cp	r20, r18
     e20:	53 07       	cpc	r21, r19
     e22:	14 f4       	brge	.+4      	; 0xe28 <dtoa_prf+0x1ac>
     e24:	b4 1a       	sub	r11, r20
     e26:	01 c0       	rjmp	.+2      	; 0xe2a <dtoa_prf+0x1ae>
     e28:	b1 2c       	mov	r11, r1
     e2a:	2e 2d       	mov	r18, r14
     e2c:	28 71       	andi	r18, 0x18	; 24
     e2e:	59 f4       	brne	.+22     	; 0xe46 <dtoa_prf+0x1ca>
     e30:	f6 01       	movw	r30, r12
     e32:	2b 2d       	mov	r18, r11
     e34:	30 e2       	ldi	r19, 0x20	; 32
     e36:	22 23       	and	r18, r18
     e38:	19 f0       	breq	.+6      	; 0xe40 <dtoa_prf+0x1c4>
     e3a:	31 93       	st	Z+, r19
     e3c:	21 50       	subi	r18, 0x01	; 1
     e3e:	fb cf       	rjmp	.-10     	; 0xe36 <dtoa_prf+0x1ba>
     e40:	cb 0c       	add	r12, r11
     e42:	d1 1c       	adc	r13, r1
     e44:	b1 2c       	mov	r11, r1
     e46:	bb 23       	and	r27, r27
     e48:	31 f0       	breq	.+12     	; 0xe56 <dtoa_prf+0x1da>
     e4a:	f6 01       	movw	r30, r12
     e4c:	60 83       	st	Z, r22
     e4e:	96 01       	movw	r18, r12
     e50:	2f 5f       	subi	r18, 0xFF	; 255
     e52:	3f 4f       	sbci	r19, 0xFF	; 255
     e54:	69 01       	movw	r12, r18
     e56:	a1 11       	cpse	r26, r1
     e58:	0b c0       	rjmp	.+22     	; 0xe70 <dtoa_prf+0x1f4>
     e5a:	f6 01       	movw	r30, r12
     e5c:	2b 2d       	mov	r18, r11
     e5e:	30 e3       	ldi	r19, 0x30	; 48
     e60:	22 23       	and	r18, r18
     e62:	19 f0       	breq	.+6      	; 0xe6a <dtoa_prf+0x1ee>
     e64:	31 93       	st	Z+, r19
     e66:	21 50       	subi	r18, 0x01	; 1
     e68:	fb cf       	rjmp	.-10     	; 0xe60 <dtoa_prf+0x1e4>
     e6a:	cb 0c       	add	r12, r11
     e6c:	d1 1c       	adc	r13, r1
     e6e:	b1 2c       	mov	r11, r1
     e70:	f8 0e       	add	r15, r24
     e72:	0a 81       	ldd	r16, Y+2	; 0x02
     e74:	37 2f       	mov	r19, r23
     e76:	30 71       	andi	r19, 0x10	; 16
     e78:	a3 2e       	mov	r10, r19
     e7a:	74 ff       	sbrs	r23, 4
     e7c:	03 c0       	rjmp	.+6      	; 0xe84 <dtoa_prf+0x208>
     e7e:	01 33       	cpi	r16, 0x31	; 49
     e80:	09 f4       	brne	.+2      	; 0xe84 <dtoa_prf+0x208>
     e82:	fa 94       	dec	r15
     e84:	1f 14       	cp	r1, r15
     e86:	2c f4       	brge	.+10     	; 0xe92 <dtoa_prf+0x216>
     e88:	2f 2d       	mov	r18, r15
     e8a:	29 30       	cpi	r18, 0x09	; 9
     e8c:	18 f0       	brcs	.+6      	; 0xe94 <dtoa_prf+0x218>
     e8e:	28 e0       	ldi	r18, 0x08	; 8
     e90:	01 c0       	rjmp	.+2      	; 0xe94 <dtoa_prf+0x218>
     e92:	21 e0       	ldi	r18, 0x01	; 1
     e94:	68 2f       	mov	r22, r24
     e96:	39 2f       	mov	r19, r25
     e98:	97 ff       	sbrs	r25, 7
     e9a:	02 c0       	rjmp	.+4      	; 0xea0 <dtoa_prf+0x224>
     e9c:	60 e0       	ldi	r22, 0x00	; 0
     e9e:	30 e0       	ldi	r19, 0x00	; 0
     ea0:	46 2f       	mov	r20, r22
     ea2:	53 2f       	mov	r21, r19
     ea4:	61 2c       	mov	r6, r1
     ea6:	71 2c       	mov	r7, r1
     ea8:	3e e2       	ldi	r19, 0x2E	; 46
     eaa:	93 2e       	mov	r9, r19
     eac:	bc 01       	movw	r22, r24
     eae:	62 1b       	sub	r22, r18
     eb0:	71 09       	sbc	r23, r1
     eb2:	9b 01       	movw	r18, r22
     eb4:	dc 01       	movw	r26, r24
     eb6:	a4 1b       	sub	r26, r20
     eb8:	b5 0b       	sbc	r27, r21
     eba:	e1 e0       	ldi	r30, 0x01	; 1
     ebc:	f0 e0       	ldi	r31, 0x00	; 0
     ebe:	ec 0f       	add	r30, r28
     ec0:	fd 1f       	adc	r31, r29
     ec2:	ae 0f       	add	r26, r30
     ec4:	bf 1f       	adc	r27, r31
     ec6:	e1 2e       	mov	r14, r17
     ec8:	f1 2c       	mov	r15, r1
     eca:	f1 94       	neg	r15
     ecc:	e1 94       	neg	r14
     ece:	f1 08       	sbc	r15, r1
     ed0:	4f 3f       	cpi	r20, 0xFF	; 255
     ed2:	ff ef       	ldi	r31, 0xFF	; 255
     ed4:	5f 07       	cpc	r21, r31
     ed6:	31 f4       	brne	.+12     	; 0xee4 <dtoa_prf+0x268>
     ed8:	f6 01       	movw	r30, r12
     eda:	90 82       	st	Z, r9
     edc:	b6 01       	movw	r22, r12
     ede:	6f 5f       	subi	r22, 0xFF	; 255
     ee0:	7f 4f       	sbci	r23, 0xFF	; 255
     ee2:	6b 01       	movw	r12, r22
     ee4:	84 17       	cp	r24, r20
     ee6:	95 07       	cpc	r25, r21
     ee8:	4c f0       	brlt	.+18     	; 0xefc <dtoa_prf+0x280>
     eea:	24 17       	cp	r18, r20
     eec:	35 07       	cpc	r19, r21
     eee:	34 f4       	brge	.+12     	; 0xefc <dtoa_prf+0x280>
     ef0:	bd 01       	movw	r22, r26
     ef2:	66 0d       	add	r22, r6
     ef4:	77 1d       	adc	r23, r7
     ef6:	fb 01       	movw	r30, r22
     ef8:	11 81       	ldd	r17, Z+1	; 0x01
     efa:	01 c0       	rjmp	.+2      	; 0xefe <dtoa_prf+0x282>
     efc:	10 e3       	ldi	r17, 0x30	; 48
     efe:	41 50       	subi	r20, 0x01	; 1
     f00:	51 09       	sbc	r21, r1
     f02:	ff ef       	ldi	r31, 0xFF	; 255
     f04:	6f 1a       	sub	r6, r31
     f06:	7f 0a       	sbc	r7, r31
     f08:	b6 01       	movw	r22, r12
     f0a:	6f 5f       	subi	r22, 0xFF	; 255
     f0c:	7f 4f       	sbci	r23, 0xFF	; 255
     f0e:	4e 15       	cp	r20, r14
     f10:	5f 05       	cpc	r21, r15
     f12:	24 f0       	brlt	.+8      	; 0xf1c <dtoa_prf+0x2a0>
     f14:	f6 01       	movw	r30, r12
     f16:	10 83       	st	Z, r17
     f18:	6b 01       	movw	r12, r22
     f1a:	da cf       	rjmp	.-76     	; 0xed0 <dtoa_prf+0x254>
     f1c:	48 17       	cp	r20, r24
     f1e:	59 07       	cpc	r21, r25
     f20:	39 f4       	brne	.+14     	; 0xf30 <dtoa_prf+0x2b4>
     f22:	06 33       	cpi	r16, 0x36	; 54
     f24:	20 f4       	brcc	.+8      	; 0xf2e <dtoa_prf+0x2b2>
     f26:	05 33       	cpi	r16, 0x35	; 53
     f28:	19 f4       	brne	.+6      	; 0xf30 <dtoa_prf+0x2b4>
     f2a:	a1 10       	cpse	r10, r1
     f2c:	01 c0       	rjmp	.+2      	; 0xf30 <dtoa_prf+0x2b4>
     f2e:	11 e3       	ldi	r17, 0x31	; 49
     f30:	f6 01       	movw	r30, r12
     f32:	10 83       	st	Z, r17
     f34:	fb 01       	movw	r30, r22
     f36:	8b 2d       	mov	r24, r11
     f38:	90 e2       	ldi	r25, 0x20	; 32
     f3a:	88 23       	and	r24, r24
     f3c:	19 f0       	breq	.+6      	; 0xf44 <dtoa_prf+0x2c8>
     f3e:	91 93       	st	Z+, r25
     f40:	81 50       	subi	r24, 0x01	; 1
     f42:	fb cf       	rjmp	.-10     	; 0xf3a <dtoa_prf+0x2be>
     f44:	fb 01       	movw	r30, r22
     f46:	eb 0d       	add	r30, r11
     f48:	f1 1d       	adc	r31, r1
     f4a:	10 82       	st	Z, r1
     f4c:	80 e0       	ldi	r24, 0x00	; 0
     f4e:	90 e0       	ldi	r25, 0x00	; 0
     f50:	29 96       	adiw	r28, 0x09	; 9
     f52:	0f b6       	in	r0, 0x3f	; 63
     f54:	f8 94       	cli
     f56:	de bf       	out	0x3e, r29	; 62
     f58:	0f be       	out	0x3f, r0	; 63
     f5a:	cd bf       	out	0x3d, r28	; 61
     f5c:	df 91       	pop	r29
     f5e:	cf 91       	pop	r28
     f60:	1f 91       	pop	r17
     f62:	0f 91       	pop	r16
     f64:	ff 90       	pop	r15
     f66:	ef 90       	pop	r14
     f68:	df 90       	pop	r13
     f6a:	cf 90       	pop	r12
     f6c:	bf 90       	pop	r11
     f6e:	af 90       	pop	r10
     f70:	9f 90       	pop	r9
     f72:	7f 90       	pop	r7
     f74:	6f 90       	pop	r6
     f76:	08 95       	ret

00000f78 <__ftoa_engine>:
     f78:	28 30       	cpi	r18, 0x08	; 8
     f7a:	08 f0       	brcs	.+2      	; 0xf7e <__ftoa_engine+0x6>
     f7c:	27 e0       	ldi	r18, 0x07	; 7
     f7e:	33 27       	eor	r19, r19
     f80:	da 01       	movw	r26, r20
     f82:	99 0f       	add	r25, r25
     f84:	31 1d       	adc	r19, r1
     f86:	87 fd       	sbrc	r24, 7
     f88:	91 60       	ori	r25, 0x01	; 1
     f8a:	00 96       	adiw	r24, 0x00	; 0
     f8c:	61 05       	cpc	r22, r1
     f8e:	71 05       	cpc	r23, r1
     f90:	39 f4       	brne	.+14     	; 0xfa0 <__ftoa_engine+0x28>
     f92:	32 60       	ori	r19, 0x02	; 2
     f94:	2e 5f       	subi	r18, 0xFE	; 254
     f96:	3d 93       	st	X+, r19
     f98:	30 e3       	ldi	r19, 0x30	; 48
     f9a:	2a 95       	dec	r18
     f9c:	e1 f7       	brne	.-8      	; 0xf96 <__ftoa_engine+0x1e>
     f9e:	08 95       	ret
     fa0:	9f 3f       	cpi	r25, 0xFF	; 255
     fa2:	30 f0       	brcs	.+12     	; 0xfb0 <__ftoa_engine+0x38>
     fa4:	80 38       	cpi	r24, 0x80	; 128
     fa6:	71 05       	cpc	r23, r1
     fa8:	61 05       	cpc	r22, r1
     faa:	09 f0       	breq	.+2      	; 0xfae <__ftoa_engine+0x36>
     fac:	3c 5f       	subi	r19, 0xFC	; 252
     fae:	3c 5f       	subi	r19, 0xFC	; 252
     fb0:	3d 93       	st	X+, r19
     fb2:	91 30       	cpi	r25, 0x01	; 1
     fb4:	08 f0       	brcs	.+2      	; 0xfb8 <__ftoa_engine+0x40>
     fb6:	80 68       	ori	r24, 0x80	; 128
     fb8:	91 1d       	adc	r25, r1
     fba:	df 93       	push	r29
     fbc:	cf 93       	push	r28
     fbe:	1f 93       	push	r17
     fc0:	0f 93       	push	r16
     fc2:	ff 92       	push	r15
     fc4:	ef 92       	push	r14
     fc6:	19 2f       	mov	r17, r25
     fc8:	98 7f       	andi	r25, 0xF8	; 248
     fca:	96 95       	lsr	r25
     fcc:	e9 2f       	mov	r30, r25
     fce:	96 95       	lsr	r25
     fd0:	96 95       	lsr	r25
     fd2:	e9 0f       	add	r30, r25
     fd4:	ff 27       	eor	r31, r31
     fd6:	e2 55       	subi	r30, 0x52	; 82
     fd8:	ff 4f       	sbci	r31, 0xFF	; 255
     fda:	99 27       	eor	r25, r25
     fdc:	33 27       	eor	r19, r19
     fde:	ee 24       	eor	r14, r14
     fe0:	ff 24       	eor	r15, r15
     fe2:	a7 01       	movw	r20, r14
     fe4:	e7 01       	movw	r28, r14
     fe6:	05 90       	lpm	r0, Z+
     fe8:	08 94       	sec
     fea:	07 94       	ror	r0
     fec:	28 f4       	brcc	.+10     	; 0xff8 <__ftoa_engine+0x80>
     fee:	36 0f       	add	r19, r22
     ff0:	e7 1e       	adc	r14, r23
     ff2:	f8 1e       	adc	r15, r24
     ff4:	49 1f       	adc	r20, r25
     ff6:	51 1d       	adc	r21, r1
     ff8:	66 0f       	add	r22, r22
     ffa:	77 1f       	adc	r23, r23
     ffc:	88 1f       	adc	r24, r24
     ffe:	99 1f       	adc	r25, r25
    1000:	06 94       	lsr	r0
    1002:	a1 f7       	brne	.-24     	; 0xfec <__ftoa_engine+0x74>
    1004:	05 90       	lpm	r0, Z+
    1006:	07 94       	ror	r0
    1008:	28 f4       	brcc	.+10     	; 0x1014 <__ftoa_engine+0x9c>
    100a:	e7 0e       	add	r14, r23
    100c:	f8 1e       	adc	r15, r24
    100e:	49 1f       	adc	r20, r25
    1010:	56 1f       	adc	r21, r22
    1012:	c1 1d       	adc	r28, r1
    1014:	77 0f       	add	r23, r23
    1016:	88 1f       	adc	r24, r24
    1018:	99 1f       	adc	r25, r25
    101a:	66 1f       	adc	r22, r22
    101c:	06 94       	lsr	r0
    101e:	a1 f7       	brne	.-24     	; 0x1008 <__ftoa_engine+0x90>
    1020:	05 90       	lpm	r0, Z+
    1022:	07 94       	ror	r0
    1024:	28 f4       	brcc	.+10     	; 0x1030 <__ftoa_engine+0xb8>
    1026:	f8 0e       	add	r15, r24
    1028:	49 1f       	adc	r20, r25
    102a:	56 1f       	adc	r21, r22
    102c:	c7 1f       	adc	r28, r23
    102e:	d1 1d       	adc	r29, r1
    1030:	88 0f       	add	r24, r24
    1032:	99 1f       	adc	r25, r25
    1034:	66 1f       	adc	r22, r22
    1036:	77 1f       	adc	r23, r23
    1038:	06 94       	lsr	r0
    103a:	a1 f7       	brne	.-24     	; 0x1024 <__ftoa_engine+0xac>
    103c:	05 90       	lpm	r0, Z+
    103e:	07 94       	ror	r0
    1040:	20 f4       	brcc	.+8      	; 0x104a <__ftoa_engine+0xd2>
    1042:	49 0f       	add	r20, r25
    1044:	56 1f       	adc	r21, r22
    1046:	c7 1f       	adc	r28, r23
    1048:	d8 1f       	adc	r29, r24
    104a:	99 0f       	add	r25, r25
    104c:	66 1f       	adc	r22, r22
    104e:	77 1f       	adc	r23, r23
    1050:	88 1f       	adc	r24, r24
    1052:	06 94       	lsr	r0
    1054:	a9 f7       	brne	.-22     	; 0x1040 <__ftoa_engine+0xc8>
    1056:	84 91       	lpm	r24, Z
    1058:	10 95       	com	r17
    105a:	17 70       	andi	r17, 0x07	; 7
    105c:	41 f0       	breq	.+16     	; 0x106e <__ftoa_engine+0xf6>
    105e:	d6 95       	lsr	r29
    1060:	c7 95       	ror	r28
    1062:	57 95       	ror	r21
    1064:	47 95       	ror	r20
    1066:	f7 94       	ror	r15
    1068:	e7 94       	ror	r14
    106a:	1a 95       	dec	r17
    106c:	c1 f7       	brne	.-16     	; 0x105e <__ftoa_engine+0xe6>
    106e:	e4 e5       	ldi	r30, 0x54	; 84
    1070:	f0 e0       	ldi	r31, 0x00	; 0
    1072:	68 94       	set
    1074:	15 90       	lpm	r1, Z+
    1076:	15 91       	lpm	r17, Z+
    1078:	35 91       	lpm	r19, Z+
    107a:	65 91       	lpm	r22, Z+
    107c:	95 91       	lpm	r25, Z+
    107e:	05 90       	lpm	r0, Z+
    1080:	7f e2       	ldi	r23, 0x2F	; 47
    1082:	73 95       	inc	r23
    1084:	e1 18       	sub	r14, r1
    1086:	f1 0a       	sbc	r15, r17
    1088:	43 0b       	sbc	r20, r19
    108a:	56 0b       	sbc	r21, r22
    108c:	c9 0b       	sbc	r28, r25
    108e:	d0 09       	sbc	r29, r0
    1090:	c0 f7       	brcc	.-16     	; 0x1082 <__ftoa_engine+0x10a>
    1092:	e1 0c       	add	r14, r1
    1094:	f1 1e       	adc	r15, r17
    1096:	43 1f       	adc	r20, r19
    1098:	56 1f       	adc	r21, r22
    109a:	c9 1f       	adc	r28, r25
    109c:	d0 1d       	adc	r29, r0
    109e:	7e f4       	brtc	.+30     	; 0x10be <__ftoa_engine+0x146>
    10a0:	70 33       	cpi	r23, 0x30	; 48
    10a2:	11 f4       	brne	.+4      	; 0x10a8 <__ftoa_engine+0x130>
    10a4:	8a 95       	dec	r24
    10a6:	e6 cf       	rjmp	.-52     	; 0x1074 <__ftoa_engine+0xfc>
    10a8:	e8 94       	clt
    10aa:	01 50       	subi	r16, 0x01	; 1
    10ac:	30 f0       	brcs	.+12     	; 0x10ba <__ftoa_engine+0x142>
    10ae:	08 0f       	add	r16, r24
    10b0:	0a f4       	brpl	.+2      	; 0x10b4 <__ftoa_engine+0x13c>
    10b2:	00 27       	eor	r16, r16
    10b4:	02 17       	cp	r16, r18
    10b6:	08 f4       	brcc	.+2      	; 0x10ba <__ftoa_engine+0x142>
    10b8:	20 2f       	mov	r18, r16
    10ba:	23 95       	inc	r18
    10bc:	02 2f       	mov	r16, r18
    10be:	7a 33       	cpi	r23, 0x3A	; 58
    10c0:	28 f0       	brcs	.+10     	; 0x10cc <__ftoa_engine+0x154>
    10c2:	79 e3       	ldi	r23, 0x39	; 57
    10c4:	7d 93       	st	X+, r23
    10c6:	2a 95       	dec	r18
    10c8:	e9 f7       	brne	.-6      	; 0x10c4 <__ftoa_engine+0x14c>
    10ca:	10 c0       	rjmp	.+32     	; 0x10ec <__ftoa_engine+0x174>
    10cc:	7d 93       	st	X+, r23
    10ce:	2a 95       	dec	r18
    10d0:	89 f6       	brne	.-94     	; 0x1074 <__ftoa_engine+0xfc>
    10d2:	06 94       	lsr	r0
    10d4:	97 95       	ror	r25
    10d6:	67 95       	ror	r22
    10d8:	37 95       	ror	r19
    10da:	17 95       	ror	r17
    10dc:	17 94       	ror	r1
    10de:	e1 18       	sub	r14, r1
    10e0:	f1 0a       	sbc	r15, r17
    10e2:	43 0b       	sbc	r20, r19
    10e4:	56 0b       	sbc	r21, r22
    10e6:	c9 0b       	sbc	r28, r25
    10e8:	d0 09       	sbc	r29, r0
    10ea:	98 f0       	brcs	.+38     	; 0x1112 <__ftoa_engine+0x19a>
    10ec:	23 95       	inc	r18
    10ee:	7e 91       	ld	r23, -X
    10f0:	73 95       	inc	r23
    10f2:	7a 33       	cpi	r23, 0x3A	; 58
    10f4:	08 f0       	brcs	.+2      	; 0x10f8 <__ftoa_engine+0x180>
    10f6:	70 e3       	ldi	r23, 0x30	; 48
    10f8:	7c 93       	st	X, r23
    10fa:	20 13       	cpse	r18, r16
    10fc:	b8 f7       	brcc	.-18     	; 0x10ec <__ftoa_engine+0x174>
    10fe:	7e 91       	ld	r23, -X
    1100:	70 61       	ori	r23, 0x10	; 16
    1102:	7d 93       	st	X+, r23
    1104:	30 f0       	brcs	.+12     	; 0x1112 <__ftoa_engine+0x19a>
    1106:	83 95       	inc	r24
    1108:	71 e3       	ldi	r23, 0x31	; 49
    110a:	7d 93       	st	X+, r23
    110c:	70 e3       	ldi	r23, 0x30	; 48
    110e:	2a 95       	dec	r18
    1110:	e1 f7       	brne	.-8      	; 0x110a <__ftoa_engine+0x192>
    1112:	11 24       	eor	r1, r1
    1114:	ef 90       	pop	r14
    1116:	ff 90       	pop	r15
    1118:	0f 91       	pop	r16
    111a:	1f 91       	pop	r17
    111c:	cf 91       	pop	r28
    111e:	df 91       	pop	r29
    1120:	99 27       	eor	r25, r25
    1122:	87 fd       	sbrc	r24, 7
    1124:	90 95       	com	r25
    1126:	08 95       	ret

00001128 <_exit>:
    1128:	f8 94       	cli

0000112a <__stop_program>:
    112a:	ff cf       	rjmp	.-2      	; 0x112a <__stop_program>
